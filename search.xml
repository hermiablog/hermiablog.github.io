<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS定位、层叠顺序、层叠上下文</title>
      <link href="/2023/11/25/CSS%E5%AE%9A%E4%BD%8D%E3%80%81%E5%B1%82%E5%8F%A0%E9%A1%BA%E5%BA%8F%E3%80%81%E5%B1%82%E5%8F%A0%E4%B8%8A%E4%B8%8B%E6%96%87/"/>
      <url>/2023/11/25/CSS%E5%AE%9A%E4%BD%8D%E3%80%81%E5%B1%82%E5%8F%A0%E9%A1%BA%E5%BA%8F%E3%80%81%E5%B1%82%E5%8F%A0%E4%B8%8A%E4%B8%8B%E6%96%87/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="CSS定位、层叠顺序、层叠上下文"><a href="#CSS定位、层叠顺序、层叠上下文" class="headerlink" title="CSS定位、层叠顺序、层叠上下文"></a>CSS定位、层叠顺序、层叠上下文</h2><blockquote><ul><li>CSS中利用position属性用于指定一个元素在文档中的定位方式。元素的定位方式有五种类型：<table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>static</code></td><td>没有定位，元素出现在正常的流中(默认值，可以忽略)</td></tr><tr><td><code>relative</code></td><td>相对定位，相对于自身正常位置进行位置的调整</td></tr><tr><td><code>absolute</code></td><td>绝对定位，相对于其最近的定位的父元素定位，进行位置的调整</td></tr><tr><td><code>fixed</code></td><td>固定定位，相对于浏览器窗口进行位置调整</td></tr><tr><td><code>sticky</code></td><td>粘性定位，是基于用户的滚动位置来定位</td></tr></tbody></table><blockquote><p><code>static</code>相当于元素没有加定位效果，如果元素加了定位，后面需要去掉，可以添加<code>position:static;</code>|</p></blockquote></li></ul></blockquote><h3 id="一、相对定位"><a href="#一、相对定位" class="headerlink" title="一、相对定位"></a>一、相对定位</h3><blockquote><p>盒子可以想对自己&#x3D;&#x3D;原来的位置&#x3D;&#x3D;进行调整，称之为相对定位</p><ul><li>给需要添加相对定位的元素，加上<code>position:relative;</code></li><li>元素的位置通过(位置描述词):<code>left</code>、<code>top</code>、<code>right</code>、<code>bottom</code>属性进行位置调整</li><li>属性值可以是正数也可以是负数<table><thead><tr><th>定位的位置属性</th><th>描述</th></tr></thead><tbody><tr><td><code>top</code></td><td>向下移动</td></tr><tr><td><code>bottom</code></td><td>向上移动</td></tr><tr><td><code>left</code></td><td>向右移动</td></tr><tr><td><code>right</code></td><td>向左移动</td></tr><tr><td>值可以为负数</td><td>即往规定方向相反移动</td></tr></tbody></table></li></ul></blockquote><blockquote><p>相对定位的特点</p><ul><li>相对定位的元素，会在“老家留坑”，本质上仍然是在原来的位置，即:元素的初始位置占据的空间会被保留</li><li>只不过渲染在新的地方而已，渲染的图形可以比喻成影子，不会对页面其他元素产生任何影响</li></ul></blockquote><h3 id="二、相对定位应用场景"><a href="#二、相对定位应用场景" class="headerlink" title="二、相对定位应用场景"></a>二、相对定位应用场景</h3><blockquote><ul><li>用来微调元素自身的位置(案例1，2，3)</li><li>可以当做绝对定位的参考盒子(绝对定位中会讲到)</li><li>用来提升自身的层级</li></ul></blockquote><ol><li>鼠标滑动到元素，元素少量位置偏移动画 <img src="相对定位应用场景1.gif"></li><li>网站导航 <img src="相对定位场景2.png"></li><li>导航(鼠标滑动带过下划线)<blockquote><ul><li>鼠标滑过时，背景颜色和a标签的文字一起变化。其前提是a标签是&#x3D;&#x3D;块级元素&#x3D;&#x3D;</li><li>知识点：块级元素没有设置宽高时，将自动撑满父盒子，但并不是继承！！！ <img src="相对定位场景3.png"></li></ul></blockquote></li><li>水平进度条<blockquote><ul><li>右浮动实现元素从右往左开始排列成一行，第一个排在最后面，最后一个排在最左边</li><li>通过相对定位微调线条位置，使其与圆形在垂直方向对其</li><li>利用<code>~</code>后续兄弟选择器，来选择他后面的元素，修改样式 <img src="相对定位场景4.png"></li></ul></blockquote></li></ol><h3 id="三、绝对定位"><a href="#三、绝对定位" class="headerlink" title="三、绝对定位"></a>三、绝对定位</h3><blockquote><p>盒子可以在浏览器中以坐标进行位置精准描述，拥有自己的绝对位置</p><ul><li>给需要添加绝对定位的元素，加上<code>position:absolute;</code></li><li>元素的位置通过(位置描述词)：<code>left</code>、<code>top</code>、<code>right</code>、<code>bottom</code>属性进行调整位置</li><li>属性值可以是正数或负数<table><thead><tr><th>定位的位置属性</th><th>描述</th></tr></thead><tbody><tr><td>top</td><td>到上边的距离</td></tr><tr><td>bottom</td><td>到下边的距离</td></tr><tr><td>left</td><td>到左边的距离</td></tr><tr><td>right</td><td>到右边的距离</td></tr></tbody></table></li></ul></blockquote><blockquote><p><strong>绝对定位元素8大特性：</strong></p><ol><li>绝对定位的元素，相对离自己最近的定位的父元素进行位置调整</li></ol><ul><li>若父元素未定位(没有<code>position: ;</code>)，则用祖先元素定位，绝对定位是相对于定位的祖先元素进行位置调整</li></ul><ol start="2"><li>如果没有定位的父元素，则相对body进行位置调整</li><li>元素完全脱离文档流，释放器原本所占据的空间</li></ol><ul><li>不会对其他元素造成任何干扰，而是对他们进行压盖</li><li>脱离文档流的方法：浮动、绝对定位、固定定位</li><li>使用绝对定位的元素将会是一种漂浮状态</li></ul><ol start="4"><li>元素的层级提升，会覆盖在其他元素上</li><li>行内元素加上定位后，会具有行内块元素特性，支持宽高设置</li><li><code>margin:auto;</code>水平居中失效，因为它变成了行内块元素</li><li>定位元素未设置宽高情况下，同时设置top和bottom会改变元素高，同时设置left、right会改变元素宽</li><li>在元素设置了宽高情况下，同时设置top与bottom，会以top值为主，bottom不生效；同时设置left与right，则以left为主，right不生效</li></ol><ul><li>top &gt; bottom,left &gt; right</li></ul></blockquote><blockquote><p><strong>使盒子水平、垂直居中</strong></p><ol><li>方法1：</li></ol><ul><li>垂直居中：top&#x3D; [父盒子高度-子盒占位高(content+padding+border+margin)]&#x2F;2</li><li>水平居中：left&#x3D;[父盒子宽度-子盒占位宽(content+padding+border+margin)]&#x2F;2</li></ul><ol start="2"><li>方法2：</li></ol><ul><li>垂直居中：top:50%，margin-top:<code>-</code>自己高度的一半</li><li>水平居中：left:50%,margin-left:<code>-</code>自己宽度的一半</li><li>记得用负号</li></ul></blockquote><blockquote><p><strong>应用场景</strong></p><ul><li>绝对定位用来制作<strong>压盖、遮罩</strong>效果</li><li>结合CSS精灵使用</li><li>结合JS实现动画</li><li>绝对定位应用非常多，灵活度也很高，靠经验积累</li></ul></blockquote><ol><li>绝对定位实现黑色半透明遮罩层<blockquote><p>注意：</p><ul><li>伪元素+.hover的写法：<code>.box:hover::after</code>，中间不用空格</li></ul></blockquote></li><li>绝对定位实现带三角的会话框<blockquote><p>注意：</p><ul><li>用<code>border-radius</code>使背景图片&#x2F;图片变成圆形</li></ul></blockquote></li></ol><h3 id="四、固定定位"><a href="#四、固定定位" class="headerlink" title="四、固定定位"></a>四、固定定位</h3><blockquote><p><strong>介绍</strong></p><ul><li>给需要添加固定定位的元素加上position:fixed;</li><li>元素的位置通过位置描述词：left、top、right、bottom属性进行位置调整</li><li>属性值可以是正数或负数</li><li>固定定位只能以页面为参考点，并没有绝对定位的参考点</li><li>固定定位脱离标准文档流</li><li>除了其位置是相对于浏览器窗口而言以外，其他与绝对定位的特性一致</li></ul></blockquote><blockquote><p><strong>应用场景</strong></p><blockquote><p>不管浏览器的滚动条如何滚动，元素始终相对于&#x3D;&#x3D;浏览器窗口&#x3D;&#x3D;的位置不变</p></blockquote><ol><li>固定定位实现返回顶部</li><li>常见的登录弹窗效果 我的疑问：</li></ol><ul><li>点击登录怎么跳出登录框？a标签的href是否可以链接它？<ul><li>目前学到的东西还做不到</li></ul></li><li>点击登录框的取消，怎么返回原页面<ul><li>目前学到的东西还做不到</li></ul></li><li>mask的尺寸问题，怎么全页面遮罩？绝对定位top&#x3D;0,left&#x3D;0？<ul><li>固定定位，四个方向距离都&#x3D;0</li></ul></li><li>登录框怎么垂直、水平居中在页面上，不论界面怎么缩放。<ul><li>固定定位</li></ul></li></ul><pre><code>position:fixed;top:50%left:50%transform:translate(-50%,-50%)</code></pre><ol start="3"><li>左右固定，中间自适应</li></ol></blockquote><h3 id="五、粘性定位"><a href="#五、粘性定位" class="headerlink" title="五、粘性定位"></a>五、粘性定位</h3><blockquote><blockquote><p>它的诞生就是为了实现字母排序显示效果(应用场景2)<br><strong>粘性定位解读：</strong></p></blockquote><ul><li>给需要的添加粘性定位的元素，加上position:sticky;</li><li>粘性定位可以看做是相对定位与固定定位的混合产物(这里的固定定位，并不是上面第四点的position:fixed;只是具有相似点)</li><li>当滚动高度小于元素所在位置时，元素以&#x3D;&#x3D;相对&#x3D;&#x3D;定位呈现</li><li>当滚动高度大于元素所在位置时，元素以&#x3D;&#x3D;固定&#x3D;&#x3D;定位呈现</li><li>当滚动高度大于(元素的父元素底部与浏览器高)时，元素相对于父元素定位，一起移走</li><li>粘性定位相对离他最近的一个拥有“滚动机制”的祖先元素(当该祖先的overflow是hidden、scroll、auto、overplay时)定位&#x3D;&#x3D;或者&#x3D;&#x3D;直接块级父元素定位<blockquote><p>注意：</p></blockquote></li><li>当body为最近”滚动机制”的祖先，此时要看到元素相对浏览器固定效果，元素的&#x3D;&#x3D;直接父元素&#x3D;&#x3D;高度一定要大于元素本身</li><li>当元素的父级拥有”滚动机制”，若有滚动条，则元素固定在父级元素的最顶部</li></ul></blockquote><ol><li>当body为最近滚动机制的祖先<blockquote><ul><li>使用粘性定位的元素，其父元素高度一定要大于它自身的高度</li><li>使用粘性定位的元素，其父元素高度一定要大于它自身的高度</li><li>当滚动高度小于元素所在位置时，该元素随滚动条一起移动，但相对位置不变</li><li>当元素所在位置&lt;滚动高度&lt;其父元素的底部，该元素固定在顶部，与body的距离&#x3D;设置的position值</li><li>当元素所在位置大于其父元素底部时，该元素底部与父元素底部重合后，一起移走</li></ul></blockquote></li><li>当父元素拥有滚动机制<blockquote><ul><li>父盒子具有overflow，且父盒子高度比它大</li><li>当滚动body的滚动条时，该盒子会整体随页面滑动</li><li>当滚动高度小于元素所在位置时，该元素随滚动条一起移动，但相对位置不变</li><li>当元素所在位置&lt;滚动高度&lt;其父元素的底部，该元素固定在顶部，与body的距离&#x3D;设置的position值</li><li>由于父盒子高度一定小于子元素总高度(不然不会出现滚动条)，所以元素所在位置不会大于其父元素底部</li></ul></blockquote></li></ol><blockquote><p><strong>粘性定位应用场景</strong></p><ol><li>头部和左侧吸顶盒效果</li></ol><ul><li>我自己做的存在的问题<ul><li>左边侧栏无法实现效果</li><li>右侧盒子的书写方式可以更简洁，用序号选择器</li></ul></li><li>看视频后的解决方式<ul><li>左右侧栏用一个盒子包裹起来，左右浮动</li><li>一定要消除浮动，不然父盒子高度塌陷就实现不了粘性定位</li><li>给父盒子加上外边距以保持与第二个盒子之间的距离</li><li>给右侧栏加:nth-child()控制颜色,偶数2n,奇数2n-1</li></ul></li></ul><ol start="2"><li>字母排序显示效果</li></ol><ul><li>注意：用定义列表dl dt dd</li></ul><ol start="3"><li>表格首行冻结</li></ol><ul><li>注意：<ul><li>使表格贴合父盒子：width: 100%;</li><li>将表格边框合并成单边框：border-collapse: collapse;</li></ul></li></ul></blockquote><h3 id="六、定位的总结"><a href="#六、定位的总结" class="headerlink" title="六、定位的总结"></a>六、定位的总结</h3><blockquote><table><thead><tr><th>定位类型</th><th>描述</th><th>应用场景</th></tr></thead><tbody><tr><td>相对定位relative</td><td>相对自身原来的位置占位，站着原来的位置</td><td>1.微调元素的位置，但还占据着原来的空间 2.只想提升元素的层级，但还是站着原来的空间</td></tr><tr><td>绝对定位absolute</td><td>相对离自己最近的定位的父元素定位，原来的位置被释放，相当于悬浮在页面中，会覆盖在其他元素的上面显示</td><td>1.一个元素想覆盖在另一个元素上 2.配合JS来实现动画效果</td></tr><tr><td>固定定位fixed</td><td>相对浏览器窗口进行定位</td><td>你想让一个元素相对浏览器的位置一直不动</td></tr><tr><td>粘性定位</td><td>相对离自己最近的拥有滚动机制的父元素定位，或，直接父元素定位</td><td>吸附效果、冻结效果</td></tr></tbody></table></blockquote><h3 id="七、z-index设置定位元素层叠顺序"><a href="#七、z-index设置定位元素层叠顺序" class="headerlink" title="七、z-index设置定位元素层叠顺序"></a>七、z-index设置定位元素层叠顺序</h3><blockquote><blockquote><p>定位的元素脱离了正常文档流，它相当于漂浮在文档上面。那如果有很多元素都用了定位，那如何确定这些元素的层叠顺序？&gt;&gt;z-index就是用来指定定位元素的堆叠顺序</p></blockquote></blockquote><blockquote><p>同一层叠上下文中z-index值的特性</p><ul><li>默认值是0</li><li>值可正可负</li><li>z-index值相同的元素，写在后面的会覆盖前面的</li><li>值越大，元素越在上面显示</li><li>只针对定位元素有效，对其他元素无效</li></ul></blockquote><h3 id="八、CSS中的层叠上下文"><a href="#八、CSS中的层叠上下文" class="headerlink" title="八、CSS中的层叠上下文"></a>八、CSS中的层叠上下文</h3><ol><li>什么是层叠上下文<blockquote><ul><li>它是一个HTML中的三维概念</li><li>在css2.1规范中有明确强调，每个css盒模型都是处在一个三维空间里面，他们分别处在平面的X轴、Y轴以及表示层叠的Z轴<img src="层叠上下文.png">>注意： </li><li>但并不是所有的盒子都会在Z轴发生层叠，默认情况下，HTML元素使沿XY轴平铺，元素默认从上到下、从左往右依次排列 </li><li>一旦发生堆叠，就能感受到Z轴的存在。不管有无层叠，Z轴都存在</li></ul></blockquote></li></ol><blockquote><p><strong>具象化解释：</strong></p><ul><li>body这个html根元素，天生具有上下文。它是爷爷，其他所有元素都同属于&#96;body&#96;&#96;这个层叠上下文。</li><li>在body中可以放普通元素，还可以放创建了层叠上下文的元素,就像爷爷可以有很多儿子。每个儿子，各自等级不同、先后顺序也不同；创建了层叠上下文的元素就像当了官，它比普通元素等级更高，而且官越高等级越高。</li><li>每个儿子还会生更多孩子，也就是爷爷的孙子。子凭父贵，父亲等级越高，它在孙子辈里等级就越高。</li><li>这里的爷爷、儿子、孙子等辈分是指不同的层叠上下文。与父盒子盒&#x2F;父元子元有区别</li></ul></blockquote><blockquote><ul><li>问题1：怎么当官？(怎么提高&#x2F;降低元素的等级) 原理<ul><li>在同一层叠上下文中，创建了层叠上下文的**&gt;**普通元素</li><li>在同一层叠上下文中，z-index值越高的官越大，未设置z-index的定位元素默认z-index&#x3D;0</li><li>在同一层叠上下文中，相同等级的元素，写在后面的比写在前面的大，后面的覆盖前面的 </li><li>方法<ul><li><ol><li>后出生(写在后面)</li></ol></li><li><ol start="2"><li>当官(创建层叠上下文)</li></ol></li><li><ol start="3"><li>提高官职(提高z-index的值)</li></ol></li></ul></li></ul></li></ul></blockquote><ol><li>创建层叠上下文的方法<blockquote><ul><li>天生的：body(又称为根层叠上下文)<ul><li>我们在写body中的HTML时，默认就是处在根层叠上下文中</li></ul></li><li>定位元素的传统层叠上下文(当官老办法，但限制于定位元素)<ul><li><code>position:relative/absolute</code>的定位元素，当其z-index的值不是auto的时候就会创建层叠上下文</li><li><code>position:fixed/sticky</code>的定位元素直接创建，不用管z-index的值</li></ul></li><li>CSS3时代的新方法(新时代新办法)<ul><li>z-index不是auto的flex项(父元素display:flex|&gt;   inline-flex)会创建层叠上下文</li><li>元素的opacity值不是1</li><li>元素的transform值不是none</li><li>元素的mix-blend-mode的值不是normal</li><li>元素filter值不是none</li><li>元素的isolation值是isolate</li><li>will-change指定的属性值为上面的任意一个</li><li>元素的-webkit-overflow-scrollin设为touch</li></ul></li></ul></blockquote></li></ol><blockquote><ul><li>问题2：普通元素分三六九等吗？怎么分？(普通元素的层级) <img src="层叠顺序.png">- ！！！首先在同一层叠上下文中，背景和边框<z-index=负数<普通元素<z-index=0的定位元素<z-index值为正数的定位元素- 普通元素： block块级元素==<==float浮动盒子==<==inline或line-block盒子>在爷爷面前是这套规矩，在儿子辈、孙子辈等每一个小社会也遵循这套规矩，只新增**子凭父贵**这一条规矩</li></ul></blockquote><ol><li>如何确定两个元素的层叠顺序<blockquote><ul><li>先确定它们父亲是谁(确定他们所在的层叠上下文)</li><li>如果是同一父亲，那就直接比较元素类型、先后顺序、z-index的值</li><li>如果不是同一父亲，那就比较父亲之间的官级大小，子凭父贵</li></ul></blockquote></li></ol><h3 id="九、阿里图标库-icon-font"><a href="#九、阿里图标库-icon-font" class="headerlink" title="九、阿里图标库-icon-font"></a>九、阿里图标库-icon-font</h3><blockquote><p>可以下载各种样式的图标 使用方法</p><ul><li>把每个图标直接下载到本地</li><li>加入购物车，添加至项目中下载压缩包(压缩包里会有使用方法)<ul><li>Unicode引用：<ul><li>把第一步中的url改成自己电脑的相对路径</li><li>在第二步复制的代码中.iconfont中修改颜色大小</li><li>在第三步的内容中填写自己想要的图标编码</li></ul></li><li>Font class引用：<ul><li>把第一步中的href地址改成自己电脑里的相对路径</li><li>修改第二步的类名，根据图标下的名字&#x2F;看iconfon.css</li><li>修改图标颜色、大小：首先这些已经设置过了，若要修改则需提高优先级</li></ul></li><li>symbol引用</li></ul></li></ul></blockquote><h3 id="十、综合实践"><a href="#十、综合实践" class="headerlink" title="十、综合实践"></a>十、综合实践</h3><ol><li>酷狗音乐精选歌单效果<blockquote><ul><li>a标签包裹全部元素</li><li>遮罩要放在最上面，position+::after就可以实现</li></ul></blockquote></li><li>小米商城右侧悬浮菜单</li><li>带左右按钮的自动轮播图效果布局</li><li>CSS实现二级导航下拉菜单<blockquote><ul><li>下拉菜单：用绝对定位</li><li>下拉菜单和导航栏的居中对齐：left:50%,margin-left:自身宽度的一半</li><li>鼠标放置效果：给导航栏的li设置:hover</li></ul></blockquote></li><li>CSS时间轴效果布局<blockquote><ul><li>时间轴布局重要！！！</li><li>限制宽度，利用左右浮动的盒子，设置左右边框样式来绘制时间轴</li><li>双引号样式：字体：Arial</li></ul></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浮动、BFC规范</title>
      <link href="/2023/11/25/%E6%B5%AE%E5%8A%A8%E3%80%81BFC%E8%A7%84%E8%8C%83/"/>
      <url>/2023/11/25/%E6%B5%AE%E5%8A%A8%E3%80%81BFC%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="浮动、BFC规范、清除浮动的最佳实践"><a href="#浮动、BFC规范、清除浮动的最佳实践" class="headerlink" title="浮动、BFC规范、清除浮动的最佳实践"></a>浮动、BFC规范、清除浮动的最佳实践</h2><h3 id="一、实现CSS布局的几种策略"><a href="#一、实现CSS布局的几种策略" class="headerlink" title="一、实现CSS布局的几种策略"></a>一、实现CSS布局的几种策略</h3><blockquote><ul><li><strong>网页布局的本质是</strong>：用CSS来摆放盒子，把盒子摆放到页面对应位置。</li><li>CSS中提供了以下几种不同的CSS<strong>布局策略</strong>，来实现页面的布局<ul><li>正常布局流</li><li>浮动布局</li><li>定位布局</li><li>表格布局(<code>display:table;</code>)</li><li>响应式设计</li><li>弹性布局</li><li>网格布局</li><li>多列布局<blockquote><p>以上每种布局方式，都有自己的用途，也有各自的优缺点，相互辅助；通过理解各个布局方法的设计理念，我们能够找到构建理想网页需要的布局方案</p></blockquote></li></ul></li></ul></blockquote><h3 id="二、正常布局流"><a href="#二、正常布局流" class="headerlink" title="二、正常布局流"></a>二、正常布局流</h3><blockquote><p>概念：</p><ul><li>在不对页面进行任何布局控制时，浏览器默认的HTML布局方式</li><li>正常的布局流就是规定了。在默认情况下块级元素和内联元素的排版方式</li></ul></blockquote><ol><li><p>正常布局流中，块级元素的排列方式</p><blockquote><ul><li>块级盒子会从包含块的顶部开始，按序垂直排列</li><li>同级盒子间的垂直距离会由“margin”属性决定</li><li>相邻两个块级盒子之间的垂直距离会遵循外边距折叠原则</li></ul></blockquote></li><li><p>正常布局流中，内联元素排版方式</p><blockquote><ul><li>盒子会从包含块的顶部开始，按序水平排列</li><li>只有水平外边距(垂直方向无效)、边框和内边距会被保留</li><li>这些盒子可以以不同方式在垂直方向对齐：可以在底部对齐或顶部对齐，或者按文字底部进行对齐???</li></ul></blockquote></li></ol><blockquote><blockquote><p>注意：所有的HTML元素本质上都是一个盒子模型，并具有盒模型的结构和属性</p></blockquote></blockquote><h3 id="三、浮动布局"><a href="#三、浮动布局" class="headerlink" title="三、浮动布局"></a>三、浮动布局</h3><ol><li>浮动布局起源<blockquote><p><strong>最初</strong></p><ul><li>引入<code>float</code>属性是为了能让web开发人员实现简单的布局，包括在一列文本中浮动的图像，文字环绕在他的左边或右边</li><li>但web开发人员很快意识到，任何东西都可以浮动，而不仅仅是图像，所以浮动的使用范围扩大了</li></ul></blockquote></li><li>浮动是如何工作的<blockquote><ul><li>把一个元素”浮动”(float)起来，会改变该元素本身和在正常布局流(normal flow)中跟随它的其他元素的行为</li><li>这一元素会浮动到左侧或右侧，并且从正常布局流中移除，这时候其他的周围内容就会在这个被设置浮动的元素周围环绕</li><li><strong>简单理解</strong><br> 当元素添加浮动后，元素就会<strong>脱离文档流</strong>，按照指定方向(左右)发生移动，遇到父级边界或者相邻的浮动元素就会停下来，同时会影响到他后面元素的排版行为<ul><li>文档流：文档中可显示对象在排列时所占据的位置&#x2F;空间(在页面中占位置)</li><li>脱离文档流：元素相当于漂浮起来，不占据页面中的位置</li></ul></li></ul></blockquote></li><li>浮动的本质和要点<blockquote><ul><li>浮动的本质功能：用来实现并排</li><li>浮动使用要点：要浮动，并排的盒子<strong>都要</strong>设置浮动</li><li>父盒子要有足够的宽度，否则子盒子会掉下去</li></ul></blockquote></li><li>如何产生浮动<blockquote><ul><li>给需要浮动的元素添加float属性，对应值如下：<table><thead><tr><th>属性</th><th>值</th></tr></thead><tbody><tr><td><code>float</code></td><td>①<code>none</code>默认值，元素不浮动    ②<code>left</code>元素向左浮动    ③<code>right</code>元素向右浮动    ④<code>inherit</code>规定应该从父元素继承float属性的值(一般不用)</td></tr></tbody></table></li></ul></blockquote></li></ol><h3 id="四、元素浮动的特性"><a href="#四、元素浮动的特性" class="headerlink" title="四、元素浮动的特性"></a>四、元素浮动的特性</h3><ol><li>元素添加浮动后，脱离文档流<blockquote><p>同时会影响其后面的元素，但不影响它前面的元素</p></blockquote></li><li>如果父元素的宽度不够<blockquote><p>子元素在放不下的情况下会换行显示</p></blockquote></li><li>浮动的顺序贴靠特性<blockquote><p>子盒子会按顺序进行贴靠，如果没有足够空间，则会寻找前一个兄弟元素</p></blockquote></li><li>元素浮动后，具有行内块级元素特性<blockquote><ul><li>浮动的元素不再区分块级元素、行内元素，因为已经脱离了标准文档流</li><li>浮动后，任何标签都能设置宽高，但不独占一行</li></ul></blockquote></li><li>浮动的元素会造成父元素高度塌陷<blockquote><ul><li>当<strong>父元素没有设置高度</strong>、且子元素设置浮动时，父元素会形成高度塌陷</li><li>因为子元素浮动后不占据页面空间</li></ul></blockquote></li><li>浮动对文字的影响<blockquote><ul><li>会形成常见的文字环绕效果，其实现方式主要是将图片左&#x2F;右浮动</li><li>浮动后其相邻文字就会环绕图片排列</li><li>图片&#x2F;子盒子要放在文字前&#x2F;中间；若放在文字后，则没有环绕效果</li></ul></blockquote></li><li>使用浮动实现网页布局<blockquote><ul><li>垂直显示的盒子，不要设置浮动，只有并排显示的盒子才需要设置浮动</li><li>每个盒子都是独立存在的，盒子内部也可以继续使用浮动</li><li>注意点：<ul><li>先搭建好框架</li><li>使用语义化标签、进行注释</li><li>对最后一个盒子的处理<code>last-child</code></li><li>在实践中发现，ul的四个li，最靠近右边的是第一个,因为右浮动，从右往左排列</li></ul></li></ul></blockquote></li></ol><h3 id="五、BFC规范和浏览器差异"><a href="#五、BFC规范和浏览器差异" class="headerlink" title="五、BFC规范和浏览器差异"></a>五、BFC规范和浏览器差异</h3><blockquote><ul><li>BFC(Box Formatting Context，块级格式上下文)是页面上的一个隔离的独立容器</li><li>容器里的子元素和容器外的元素互不干扰</li><li>元素浮动的第五个特性：“父元不设高度，子元浮动，会造成父元素高度塌陷”，其原因就是这个盒子没有形成BFC</li></ul></blockquote><ol><li>创建BFC的方法<blockquote><ul><li>方法1：float的值不是<code>none</code><ul><li>缺点：该方法可以实现效果，但没有意义，不可能随意给盒子设置浮动</li></ul></li><li>方法2：position的值不是<code>static</code>或<code>relative</code><ul><li>缺点：该方法可以实现，但不靠谱</li></ul></li><li>方法3：display的值是<code>inline-block</code>、<code>flex</code>、<code>inline-flex</code><ul><li>缺点：该方法可以实现，但没有意义，因为不可能随意更改盒子类型</li></ul></li><li>方法4：<code>overflow:hidden;</code><ul><li>缺点：该方法可以实现，但不满足所有的场景，例如想要使溢出的元素显示的情况；</li><li>但这是非常好用的方法，比其他方式使用的更多</li></ul></li></ul></blockquote></li><li>BFC的其他作用<blockquote><ul><li>BFC可以取消盒子margin塌陷：<ul><li>方法1：既可以解决父子元素也可以解决兄弟元素的外边距塌陷</li><li>方法2：可以解决父子元素之间的塌陷，但兄弟元素无效</li><li>方法3：<code>inline-block</code>和<code>inline-flex</code>的效果和方法1一样，但转成行内块元素时，相邻的行内块元素会产生空白间隙。<code>flex</code>对兄弟元素无效，只能解决父子元素之间的塌陷</li><li>方法4：可以解决<strong>父子元素</strong>之间垂直方向外边距塌陷问题，但解决不了兄弟元素之间的塌陷</li></ul></li><li>BFC可以阻止元素被浮动元素覆盖</li></ul></blockquote></li><li>浏览器差异<blockquote><ul><li>IE6、7浏览器使用haslayout机制和BFC规范略有差异</li></ul></blockquote><ul><li>比如：IE浏览器可以使用zoom:1属性，让盒子拥有layout<blockquote><ul><li>如果要制作兼容到IE6、7的网页时，尽量让网页布局变得简单，内部有浮动的盒子要设置height属性，规范编程，就没有问题</li></ul></blockquote></li></ul></li></ol><h3 id="六、清除浮动"><a href="#六、清除浮动" class="headerlink" title="六、清除浮动"></a>六、清除浮动</h3><blockquote><ul><li>清除浮动：浮动一定要封闭到一个盒子中，否则就会对页面后续元素产生影响</li></ul></blockquote><ol><li>清除浮动方法1<blockquote><ul><li>给父盒子设置<code>clear:both;</code>属性</li><li><code>clear</code>表示清除浮动对自己的影响，<code>both</code>表示左右浮动全部清除</li><li>该方法不推荐。父盒子不会被撑起来。</li></ul></blockquote></li><li>清除浮动方法2<blockquote><ul><li>在两个父盒子之间”隔墙”隔一个携带<code>clear:both;</code>的盒子</li><li>可以清除浮动，但不能撑起盒子。而且新增一个div对页面有影响</li><li>不推荐</li></ul></blockquote></li><li>清除浮动方法3<blockquote><ul><li>原理是让内部有浮动的父盒子形成BFC，它就能关闭住内部的浮动</li><li>在创建BFC的四个方法中，最好的方法是<code>overflow:hidden;</code>，但这个方法有局限性</li><li>不能解决兄弟元素的外边距塌陷</li></ul></blockquote></li><li>清除浮动方法4——最佳方法<blockquote><ul><li>使用<code>::after</code>伪元素，给盒子添加最后一个子元素</li><li>给<code>::after</code>设置<code>clear:both</code></li><li>别忘了写<code>content=&quot;&quot;;</code></li><li><code>display:block</code>,伪元素默认是行内元素，所以要把它转化为块级元素。若不转换，则父元素不能被撑起来。</li><li>不能解决兄弟元素的外边距塌陷</li><li>强烈推荐</li></ul></blockquote></li></ol><h3 id="七、浮动实战应用"><a href="#七、浮动实战应用" class="headerlink" title="七、浮动实战应用"></a>七、浮动实战应用</h3><blockquote><ul><li>浮动的元素一般都会在其外边套一个标准流</li></ul></blockquote><ol><li>实现左右两列式布局</li><li>实现一行多列式布局</li><li>三列式布局，中间自适应<blockquote><ul><li>注意点：<ul><li>body里先写左右，再写中间。左右盒子各自浮动，再填充中间元素</li><li>用怪异盒模型保持内边距和边框不变</li><li>用外边距控制中间元素位置</li><li>用伪元素+clear:both来清除浮动</li></ul></li></ul></blockquote></li><li>多行多列式布局</li><li>实现整站结构布局</li><li>作业1：前端必会的三种CSS布局技术</li><li>作业2：酷狗音乐热门榜单</li><li>小米商城产品展示效果</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS三大特性</title>
      <link href="/2023/11/25/CSS%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7/"/>
      <url>/2023/11/25/CSS%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="CSS-三大特性：继承、层叠性、优先级"><a href="#CSS-三大特性：继承、层叠性、优先级" class="headerlink" title="CSS 三大特性：继承、层叠性、优先级"></a>CSS 三大特性：继承、层叠性、优先级</h2><blockquote><p>在实际的开发中，经常会遇到CSS应用时的冲突问题。比如本来应该产生效果的样式没有生效，或有时候不想要的效果硬实现了。<br>CSS三大特性：继承性、层叠性、优先级就是为解决这些问题而来的。</p></blockquote><h3 id="一、CSS继承性"><a href="#一、CSS继承性" class="headerlink" title="一、CSS继承性"></a>一、CSS继承性</h3><blockquote><ul><li>CSS的继承性是指特定的CSS属性会向下传递到子孙元素。即祖先元素设置，后代元素即生效</li></ul></blockquote><h4 id="1-CSS继承性遵循”就近原则”"><a href="#1-CSS继承性遵循”就近原则”" class="headerlink" title="1.CSS继承性遵循”就近原则”"></a>1.CSS继承性遵循”就近原则”</h4><blockquote><ul><li>如果元素自身没有设置某个具有可继承的属性，则会向他的父元素继承</li><li>如果父元素没有，则再往上继承父元素的父元素的这个属性，一层一层向上找，如果找不到，就以默认的样式显示<blockquote><p>如何查看元素的默认值?</p></blockquote></li><li>要了解一个属性的默认值，可以把这个属性值设置为initial，然后审查元素，在computed&#x2F;styles面板中可以看到其默认值，如<code>color:initial</code></li></ul></blockquote><h4 id="2-可继承和不可继承属性有哪些"><a href="#2-可继承和不可继承属性有哪些" class="headerlink" title="2.可继承和不可继承属性有哪些"></a>2.可继承和不可继承属性有哪些</h4><blockquote><blockquote><p>可继承属性:<strong>文本相关的属性</strong>普遍具有继承性，只需要给祖先标签设置，即可在后代所有标签中生效</p></blockquote><ul><li>字体系列：font-size、font-family、font-style、font、font-weight</li><li>文本系列：color、text-align、text-indent、line-height、word-spacing、letter-spacing、text-transform</li><li>列表布局属性：list-style、list-style-type、list-style-image、list-style-image</li><li>光标属性：cursor光标显示为何种形态</li><li>元素可见性：visibility控制元素显示和隐藏</li></ul></blockquote><blockquote><blockquote><p>不可继承属性</p></blockquote><ul><li>盒子模型：display、margin、border、padding、height、min-height、max-height、width、min-width、max-width</li><li>定位相关：position、left、right、top、bottom、z-index</li><li>浮动：float、clear</li><li>其他：background、overflow、table-layout、vertical-align、page-break-after、page-bread-before、unicode-bidi</li></ul></blockquote><h4 id="3-特殊情况："><a href="#3-特殊情况：" class="headerlink" title="3.特殊情况："></a>3.特殊情况：</h4><blockquote><ul><li>a标签的color值默认不继承，它自带默认效果</li></ul></blockquote><h4 id="4-line-height的继承性"><a href="#4-line-height的继承性" class="headerlink" title="4.line-height的继承性"></a>4.line-height的继承性</h4><blockquote><p>line-height的值有三种单位，在继承时是有差异的</p><table><thead><tr><th>父元素line-height值</th><th>继承规则</th><th>子元素line-height值</th></tr></thead><tbody><tr><td>50px</td><td>直接继承该值</td><td>50px</td></tr><tr><td>2</td><td>直接继承该比例</td><td>2</td></tr><tr><td>200%</td><td>继承百分比<strong>计算后</strong>的值</td><td>40px</td></tr></tbody></table><ul><li>数值表示法和百分比表示法是以<code>font-size</code>为依据的<img src="line-height.png"></li></ul></blockquote><h4 id="4-应用：body标签样式初始化"><a href="#4-应用：body标签样式初始化" class="headerlink" title="4.应用：body标签样式初始化"></a>4.应用：body标签样式初始化</h4><blockquote><p>因为文字相关属性具有继承性，所以通常会设置<code>&lt;body&gt;</code>标签的字号、颜色、行高等，这样就能当做整个网页的默认样式了</p></blockquote><h4 id="5-设置继承性"><a href="#5-设置继承性" class="headerlink" title="5.设置继承性"></a>5.设置继承性</h4><blockquote><p>默认不继承的属性想要继承，可以把属性值设置为<code>inherit</code>，表示这个属性的值继承父元素的</p><blockquote><p>扩展补充知识</p></blockquote><ul><li><code>initial</code>：设置属性值和浏览器默认样式相同</li><li><code>inherit</code>：设置属性值默认继承父元素</li><li><code>unset</code>：为以上两个值的组合；如果属性有继承性，则继承父元素，没有则为默认值(不设置也是这个效果)</li></ul></blockquote><h3 id="二、CSS层叠性"><a href="#二、CSS层叠性" class="headerlink" title="二、CSS层叠性"></a>二、CSS层叠性</h3><blockquote><ul><li>层叠性是CSS的一个基本特征，它是一个定义了如何合并来自多个源(css规则)的属性值的算法</li><li>它在CSS中处于核心地位，CSS的全称：层叠样式表正式强调了这一点</li></ul></blockquote><h4 id="1-CSS层叠性解读"><a href="#1-CSS层叠性解读" class="headerlink" title="1.CSS层叠性解读"></a>1.CSS层叠性解读</h4><blockquote><ul><li>层叠性是指多个CSS规则可以作用于同一个标签，效果叠加，并不完全覆盖</li><li>CSS的层叠性有两层含义：<strong>叠加</strong>和<strong>覆盖</strong></li><li>不同选择器作用于同一元素，不同属性会<strong>叠加</strong>，相同属性会<strong>覆盖</strong></li><li>在覆盖时需要遵循两大原则：”就近原则”和”优先级”</li></ul></blockquote><h4 id="2-CSS的叠加原理"><a href="#2-CSS的叠加原理" class="headerlink" title="2.CSS的叠加原理"></a>2.CSS的叠加原理</h4><blockquote><ul><li>不同选择器作用于同一元素，不同属性会叠加作用于元素</li></ul></blockquote><h4 id="3-CSS的覆盖原则"><a href="#3-CSS的覆盖原则" class="headerlink" title="3.CSS的覆盖原则"></a>3.CSS的覆盖原则</h4><blockquote><blockquote><p>就近原则</p></blockquote><ul><li>当两个或多个<strong>优先级相同</strong>的选择器作用到同一个元素时。如果出现相同的属性，则以写在后面的选择器中的属性为主<blockquote><p>优先级</p></blockquote></li><li>当两条或多条规则(选择器)作用到同一个元素，如果出现相同的属性，则以优先级高的为主</li></ul></blockquote><h4 id="4-层叠性的冲突处理"><a href="#4-层叠性的冲突处理" class="headerlink" title="4.层叠性的冲突处理"></a>4.层叠性的冲突处理</h4><blockquote><ul><li>不同CSS规则集同时作用于同一个标签，不同属性相互叠加，相同属性会覆盖</li><li>相同属性覆盖，首先需要计算选择器的权重，最后以选择器权重高的为主</li><li>如果选择器权重相同，则写在后面的会覆盖写在前面的</li><li>如果想要实现的效果，因为选择器权重低而不生效，则通过提高选择器权重来达到效果</li></ul></blockquote><h3 id="三、CSS选择器优先级"><a href="#三、CSS选择器优先级" class="headerlink" title="三、CSS选择器优先级"></a>三、CSS选择器优先级</h3><blockquote><ul><li>当多个CSS规则集同时作用于同一个HTML标签时，不同属性会叠加，但相同属性会发生覆盖</li><li>在发生覆盖时，浏览器通过选择器的优先级来判断以哪个选择器中的属性值为主，从而在该元素上应用这些属性值</li></ul></blockquote><h4 id="1-单个选择器类型的权重"><a href="#1-单个选择器类型的权重" class="headerlink" title="1.单个选择器类型的权重"></a>1.单个选择器类型的权重</h4><blockquote><ul><li>基础选择器：id选择器&gt;class选择器&gt;标签选择器&gt;通配符选择器</li><li>本质上不同类型的选择器有不同的分数值，分数值越高，选择器的权重越高<table><thead><tr><th>选择器的类型</th><th>实例</th><th>选择器权重</th><th>等级</th></tr></thead><tbody><tr><td>!important</td><td><code>div&#123;color:red!important;&#125;</code></td><td>无穷大</td><td>特级</td></tr><tr><td>行内样式(style属性中样式)</td><td><code>style=&#39;color:red&#39;;</code></td><td>1000</td><td>第一等级</td></tr><tr><td>id选择器</td><td>#id</td><td>0100</td><td>第二等级</td></tr><tr><td>class、伪类、属性选择器</td><td><code>.box</code>、<code>:hover</code>、<code>type=text</code></td><td>0010</td><td>第三等级</td></tr><tr><td>标签选择器、伪元素选择器</td><td><code>div1、</code>::after&#96;</td><td>0001</td><td>第四等级</td></tr><tr><td>通配符、子选择器、相邻选择器等</td><td><code>*</code>、<code>&gt;</code>、<code>+</code>、<code>~</code></td><td>0000</td><td></td></tr><tr><td>继承的样式</td><td></td><td>0000</td><td></td></tr></tbody></table><blockquote><p>通配符<code>*</code>权重实际是要大于继承的样式的；因为只有在没有设置样式是才会继承或者使用默认样式</p></blockquote></li></ul></blockquote><h4 id="2-复杂选择器优先级计算"><a href="#2-复杂选择器优先级计算" class="headerlink" title="2.复杂选择器优先级计算"></a>2.复杂选择器优先级计算</h4><blockquote><ul><li>优先级就是分配给指定的CSS声明的一个权重</li><li>选择器的优先级是由选择器中的每一种**选择器类型的数值(权值)**相加的最终结果来决定</li><li>一个选择器的优先级是有四个部分相加计算得来的(数值越大，代表选择器的优先级越高)<br><strong>以下是复杂选择器的权重计算规则</strong></li><li>这里的行内样式<code>&lt;p style=&quot;color:red&quot;&gt;&lt;/p&gt;</code>并不是选择器，但我们把它放在一起，是因为它会影响我们最终的结果<table><thead><tr><th>选择器</th><th>千位</th><th>百位</th><th>十位</th><th>个位</th><th>优先级</th></tr></thead><tbody><tr><td>行内样式</td><td>1</td><td>0</td><td>0</td><td>0</td><td>1000</td></tr><tr><td><code>div p</code></td><td>0</td><td>0</td><td>0</td><td>2</td><td>0002</td></tr><tr><td><code>#box div p</code></td><td>0</td><td>1</td><td>0</td><td>2</td><td>0102</td></tr></tbody></table></li></ul><p>|<code>.box .item h3</code>|0|0|2|1|0021|<br>|<code>.box:hover p</code>|0|0|2|1|0021|</p><blockquote><p>注意事项：</p></blockquote><ul><li>在进行选择器权重计算时不允许进行<strong>进位</strong></li><li>例如，20个类选择器仅仅意味着20个十位，而不能视为两个百位；也就是说，无论多少个类选择器的权重叠加，都不会超过一个ID选择器</li><li>在比较选择器优先级时，从左往右比较，一位一位比较</li></ul></blockquote><h4 id="3-important提升权重"><a href="#3-important提升权重" class="headerlink" title="3.!important提升权重"></a>3.<code>!important</code>提升权重</h4><blockquote><ul><li>当在一个样式声明中使用一个<code>!important</code>规则时，此声明将覆盖任何其他声明，只要CSS声明属性值后面带<code>!important</code>，就一定以它为主</li><li>从技术上讲，<code>!important</code>与优先级无关，但它与最终结果直接相关<blockquote><p>注意：慎用<code>!important</code></p></blockquote></li><li>因为这会带来样式的冲突，后面某个地方，需要重写这个样式时，会发现根本无效。一般你在利用第三方组件或css框架时，如果不能充下央视，那将会失去很多色彩</li><li>在某些情况下是一定要用的，比如在之前学的自定义字体时，<code>font-family</code>属性后面加了<code>!important</code>关键字</li></ul></blockquote><h4 id="4-总结：CSS选择器优先级"><a href="#4-总结：CSS选择器优先级" class="headerlink" title="4.总结：CSS选择器优先级"></a>4.总结：CSS选择器优先级</h4><blockquote><p>首先要找到，有<strong>哪些选择器</strong>在控制标签元素的样式，然后按以下五步来分析</p><ul><li>第一步：找有没有带<code>important</code>关键词的CSS声明，有就一定以他为主，没有看第二步</li><li>第二步：找有没有行内样式，有则以行内样式为主，没有看第三步</li><li>第三步：看选择器的优先级，优先级高的为主，如果优先级相同，则看第四步</li><li>第四步：优先级相同，以写在后面的为主。如果没有选择器作用于当前标签，则看第五步</li><li>看此CSS属性是否具有继承性，如果有，则继承父元素的样式，如果没有，则以默认样式显示</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS盒子模型</title>
      <link href="/2023/11/25/CSS%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
      <url>/2023/11/25/CSS%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="CSS盒子模型"><a href="#CSS盒子模型" class="headerlink" title="CSS盒子模型"></a>CSS盒子模型</h2><h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><h4 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h4><blockquote><ul><li>网页本质上是由一个个盒子模型拼凑而成，每个盒子里放置相关的图片、文字、视频等内容</li><li>所有HTML标签都可以看成矩形盒子，具有盒子模型结构</li><li>盒模型由四个部分组成，分别是:<code>content</code>、<code>padding</code>、<code>border</code>、<code>margin</code></li><li>盒模型有5个属性:宽<code>width</code>、高<code>height</code>、边框<code>boder</code>、内边距<code>padding</code>、外边距<code>margin</code><img src="盒子模型.png"></li><li>注:<code>width</code>、<code>height</code>不是盒子的总宽度，而是内容<code>content</code>的宽高</li></ul></blockquote><h4 id="2-width和height属性"><a href="#2-width和height属性" class="headerlink" title="2. width和height属性"></a>2. width和height属性</h4><blockquote><ul><li>width属性<ul><li>单位:px、移动端开发(百分比、rem等单位)</li><li>如果不设置width,块级元素会被撑满(但不意味着width可以继承，是无法继承的)，非块级元素只能被内容撑开</li><li>块级元素的宽度可以设置，非块级元素无效</li></ul></li><li>height属性<ul><li>如果不设置height属性，它将自动被其内容撑开，若没有内容，则height默认是0</li><li>块级元素的高度可以设置，非块级元素由内容撑开</li></ul></li><li>总结<ul><li>块级元素支持设置宽高，没有设置时，宽度自动撑满它的父元素；高度为内容高度，无内容时<strong>高度</strong>为0；</li><li>内联元素设置宽高无效，没有设置时，宽高由内容决定，无内容时<strong>宽高</strong>默认为0</li></ul></li></ul></blockquote><blockquote><table><thead><tr><th>类型</th><th>元素</th><th>性质</th></tr></thead><tbody><tr><td>块级元素</td><td>h1~h6、p、div、ul&#x2F;ol-li、dtdd、figure、figcaption、form、table、canvas、pre</td><td>独占一行、默认自上而下排列，可以设置宽高</td></tr><tr><td>内联元素&#x2F;行内元素</td><td>a、span、lable、strong、em、mark、datalist</td><td>不会自占一行，宽高由内容撑起</td></tr><tr><td>特殊内联元素&#x2F;行内块级元素&#x2F;可替换元素</td><td>img、audio、video、input、select-option、textarea</td><td>不独占一行，可以设置宽高</td></tr></tbody></table></blockquote><h4 id="3-border属性"><a href="#3-border属性" class="headerlink" title="3. border属性"></a>3. border属性</h4><blockquote><ul><li>三要素:线宽度、线型、线颜色<br> 写法：<code>border:2px solid red</code>;以空格分隔<ul><li>线型:<table><thead><tr><th>常见线型值</th><th>描述</th></tr></thead><tbody><tr><td>solid</td><td>实线</td></tr><tr><td>dashed</td><td>虚线</td></tr><tr><td>dotted</td><td>点状线</td></tr><tr><td>double</td><td>双边框</td></tr><tr><td>groove</td><td>定义3D凹槽边框，效果取决于border-color的值</td></tr><tr><td>ridge</td><td>定义3D垄状边框，效果取决于boder-color的值</td></tr><tr><td>inset</td><td>3D inset 边框，其效果取决于 border-color的值</td></tr><tr><td>outset</td><td>3D outset 边框，其效果取决于 border-color 的值</td></tr><tr><td>none</td><td>无边框</td></tr><tr><td>hidden</td><td>隐藏边框</td></tr></tbody></table></li></ul></li></ul></blockquote><blockquote><ul><li>三要素的小属性：</li><li>注：是为了层叠大属性用的，进行局部修改<table><thead><tr><th>小属性</th><th>描述</th></tr></thead><tbody><tr><td>border-width</td><td>线宽</td></tr><tr><td>border-style</td><td>线型</td></tr><tr><td>border-color</td><td>线颜色</td></tr></tbody></table></li></ul></blockquote><blockquote><ul><li>四个方向的边框<table><thead><tr><th>大属性</th><th>小属性</th><th>描述</th></tr></thead><tbody><tr><td>border-top</td><td>border-top-width&#x2F;style&#x2F;color</td><td>上边框</td></tr><tr><td>border-right</td><td>border-right-width&#x2F;style&#x2F;color</td><td>右边框</td></tr><tr><td>border-bottom</td><td>同上</td><td>下边框</td></tr><tr><td>border-left</td><td>同上</td><td>左边框</td></tr></tbody></table></li><li>去掉边框<br>去掉左边框：<code>border-left:none;</code></li></ul></blockquote><h4 id="4-border的应用场景"><a href="#4-border的应用场景" class="headerlink" title="4. border的应用场景"></a>4. border的应用场景</h4><blockquote><ul><li>制作三角形<ul><li>不输入文字，把宽高设置为0</li><li>边框会聚集成正方形，每一边都是一个三角形，只要把其他三边设置成<code>transparent</code>透明色就可以了</li></ul></li></ul><pre class=" language-css"><code class="language-css">div &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">30</span>px solid transparent<span class="token punctuation">;</span> <span class="token property">border-top-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&lt;body> &lt;div>&lt;/div>&lt;/body></code></pre></blockquote><blockquote><ul><li>圆角属性border-radius<ul><li>该属性单位通常为<code>px</code>，表示圆角的半径</li><li>还可以使用百分比做单位，表示圆角起始于每条边的哪里</li><li>不输入文本内容，设置圆角</li><li>赋值方式：<ul><li>同时设置四个角<code>border-radius:20px;</code></li><li>单独设置四个角<code>border-radius:10px 20px 30px 40px;</code>分别代表“上右下左”</li><li>单独设置每一个角：小属性</li></ul></li></ul></li></ul><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>border-top-left-radius</code></td><td>左上角</td></tr><tr><td><code>border-top-right-radius</code></td><td>右上角</td></tr><tr><td><code>border-bottom-left-radius</code></td><td>左下角</td></tr><tr><td><code>border-bottom-right-radius</code></td><td>右下角</td></tr></tbody></table><pre><code>border-radius:50%; /*盒子为正方形时是圆*/border-radius:  px;/*圆，数值正方形宽度的一半*/border-radius: 50%;/*盒子为长方形时是椭圆*/</code></pre></blockquote><h4 id="5-padding内边距"><a href="#5-padding内边距" class="headerlink" title="5. padding内边距"></a>5. padding内边距</h4><blockquote><ul><li>padding是边框内壁到内容之间的距离</li></ul></blockquote><blockquote><ul><li>数值的写法，以空格分隔<table><thead><tr><th>数值</th><th>说明</th><th>示范</th></tr></thead><tbody><tr><td>四个数值</td><td>分别表示<code>上右下左</code></td><td><code>padding:10px 20px 30px 40px</code></td></tr><tr><td>&#x3D;&#x3D;三个数值&#x3D;&#x3D;</td><td>分别表示<code>上、左右、下</code></td><td><code>padding:10px 20px 30px</code></td></tr><tr><td>两个数值</td><td><code>上下、左右</code></td><td><code>padding:10px 20px</code></td></tr><tr><td>一个数值</td><td>四个边距相等</td><td><code>padding:10px;</code></td></tr></tbody></table></li><li>应用场景：如果需要设置父子间间距，即给父元素添加内边距来实现</li></ul></blockquote><blockquote><ul><li>小属性：四个方向可以分别设置，用来层叠大属性<table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>padding-top</code></td><td>上内边距</td></tr><tr><td><code>padding-right</code></td><td>右内边距</td></tr><tr><td><code>padding-bottom</code></td><td>下内边距&#96;</td></tr><tr><td><code>padding-left</code></td><td>左内边距</td></tr></tbody></table></li></ul></blockquote><blockquote><p><code>padding-bottom:100%;</code>可以使元素高度等于宽度</p></blockquote><h4 id="6-margin外边距"><a href="#6-margin外边距" class="headerlink" title="6. margin外边距"></a>6. margin外边距</h4><blockquote><ul><li>是盒子与其他盒子之间的距离</li><li>有四个方向可以分别设置</li></ul></blockquote><blockquote><ul><li>数值的写法与<code>padding</code>相同<table><thead><tr><th>数值</th><th>说明</th><th>示范</th></tr></thead><tbody><tr><td>四个数值</td><td>分别表示<code>上右下左</code></td><td><code>padding:10px 20px 30px 40px</code></td></tr><tr><td>&#x3D;&#x3D;三个数值&#x3D;&#x3D;</td><td>分别表示<code>上、左右、下</code></td><td><code>padding:10px 20px 30px</code></td></tr><tr><td>两个数值</td><td><code>上下、左右</code></td><td><code>padding:10px 20px</code></td></tr><tr><td>一个数值</td><td>四个边距相等</td><td><code>padding:10px;</code></td></tr></tbody></table></li></ul></blockquote><blockquote><ul><li>小属性：四个方向可以分别设置，用来层叠大属性<table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>margin-top</code></td><td>上外边距</td></tr><tr><td><code>margin-right</code></td><td>右外边距</td></tr><tr><td><code>margin-bottom</code></td><td>下外边距</td></tr><tr><td><code>margin-left</code></td><td>左外边距</td></tr></tbody></table><blockquote><p>注意：</p></blockquote></li><li>如果数值是百分比，则是以其&#x3D;&#x3D;父盒子的宽度&#x3D;&#x3D;为基础的，等于父盒子宽度的百分之几</li></ul></blockquote><blockquote><ul><li>margin的塌陷</li><li>又称为：外间距重叠&#x2F;外边距合并&#x2F;外边距穿透</li></ul><ol><li>兄弟元素之间，<strong>垂直</strong>方向：上下外边距出现塌陷</li></ol><ul><li>第一个元素的下外边距与第二个元素的上外边距会发生合并</li><li>margin不会叠加，只以大值为准</li><li>解决办法：<ul><li>任何一个元素加上<code>display:inline-block;</code></li><li>把外边距只加在其中一个元素上</li><li>任意一个元素margin换成对应的<code>padding</code>：把其中一个盒子外边距删除，然后套上透明色，内边距为原本的margin的盒子或者套上<code>padding-top</code>&#x3D;margin的盒子</li></ul></li></ul><ol start="2"><li>margin在<strong>水平</strong>方向上不会塌陷</li><li>父子元素之间，垂直方向：上外边距塌陷</li></ol><ul><li>当一个元素包含在另一元素中时，如果父元素没有设置内边距<strong>或</strong>边框把外边距分隔开，他们的上外边距也会发生塌陷(合并)</li><li>原本子元素设置margin后会与父元素的边框产生距离，但因为发生塌陷，所以父子元素上边框重叠，子元素的外边距穿透出去，与父元素的外边距合并</li><li>塌陷是最大值为主</li><li>解决办法：<ul><li>给父元素加上<code>overfiow:hidden</code>;但子元素超出的部分会被隐藏</li><li>给父元素添加<code>border</code>边框；但占位宽会多两像素</li><li>把子元素外边距删除，然后套上透明色，内边距为原本的margin的盒子或者套上<code>padding-top</code>&#x3D;margin的盒子</li><li>还有更多方法，学完浮动、定位后会讲解</li></ul></li><li>垂直或者父子元素的解决办法3：</li></ul><pre><code>&lt;div class=&quot;box1&quot;&gt;&lt;/div&gt;&lt;div style=&quot;padding-top:30px;&quot;&gt;  &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;&lt;/div&gt;</code></pre></blockquote><blockquote><ul><li>margin负值</li><li>讲完浮动后再学习</li></ul></blockquote><h4 id="7-去掉元素的默认样式"><a href="#7-去掉元素的默认样式" class="headerlink" title="7. 去掉元素的默认样式"></a>7. 去掉元素的默认样式</h4><blockquote><ul><li>网页中的元素为了展示元素本身的用途和结构，都会给元素添加默认的样式</li><li>常见的默认样式如下：<ul><li><code>body</code>的默认margin&#x3D;8px</li><li><code>ul</code>添加了默认的<code>padding</code>、<code>list-style</code>、<code>margin</code></li><li>a标签添加了默认的颜色、下划线</li><li>p标签有默认的<code>margin</code></li></ul></li><li>怎么做？<ul><li>用通配符选择器；实际工作中不使用<br><code>* &#123;margin:0;padding:0;&#125;</code></li><li>使用并集选择器，用<code>,</code>分隔</li></ul></li></ul><pre><code>body,ul,p &#123;    margin:0;padding:0;    &#125;</code></pre></blockquote><h4 id="8-盒子的水平居中"><a href="#8-盒子的水平居中" class="headerlink" title="8. 盒子的水平居中"></a>8. 盒子的水平居中</h4><blockquote><ul><li>将盒子的左右margin设置为<code>auto</code>，将盒子水平居中，只对块级元素有效</li><li><code>auto</code>用在上下外边距时没有用</li><li>文字、图片、行内块元素水平居中：<code>text-align:center</code></li><li>块级元素水平居中，是给元素自身加上<code>margin:0 auto;</code></li><li>盒子的垂直居中，需要使用绝对定位技术实现(后边会讲到)</li></ul></blockquote><h4 id="9-盒子模型占位计算"><a href="#9-盒子模型占位计算" class="headerlink" title="9. 盒子模型占位计算"></a>9. 盒子模型占位计算</h4><blockquote><ul><li>盒模型内容区大小：</li><li>在标准盒子模型中，决定了父元中的子元素能占据的最大宽高<ul><li>如果只有一个子元素，其宽度超过父元，就会溢出(对内联元素无效，因为内联元素不能设置宽高)</li><li>如果有多个子元素(行内元素、行内块元素)，子元的宽度加起来超过了父元，那么超过的那些子元就会换行显示。(块级元素本来就独占一行)</li></ul></li></ul></blockquote><blockquote><ul><li>盒模型可视宽高：在页面呈现效果的区域<ul><li>可视宽度：内容区宽度+左右内边距+左右边框</li><li>可视高度：内容区高度+上下内边距+上下边框</li></ul></li></ul></blockquote><blockquote><ul><li>实际占位宽高</li><li>决定了这个元素在父元素中的占据面积<ul><li>实际宽度：内容区宽度+左右内边距+左右边框左右外边距</li><li>实际高度：内容区高度+左右内边距+左右边框左右外边距</li></ul></li></ul></blockquote><h3 id="怪异盒模型-IE盒子模型，CSS3新增"><a href="#怪异盒模型-IE盒子模型，CSS3新增" class="headerlink" title="怪异盒模型(IE盒子模型，CSS3新增)"></a>怪异盒模型(IE盒子模型，CSS3新增)</h3><h4 id="1-盒模型分为两种"><a href="#1-盒模型分为两种" class="headerlink" title="1. 盒模型分为两种"></a>1. 盒模型分为两种</h4><blockquote><ul><li>标准盒模型：盒子大小会因为设置的内外边距和边框而变化，即：外扩</li><li>怪异盒模型：盒子的实际大小是设置的大小(width、height),不会因为内外边距、边框的大小而变化，即内缩</li><li>二者之间的区别：<ul><li>标准盒模型的width和height设置的是内容区；而在怪异盒模型中，width和height包括内容区、边框、内边距</li><li>尺寸计算公式不同</li></ul></li></ul></blockquote><h4 id="2-计算公式"><a href="#2-计算公式" class="headerlink" title="2.计算公式"></a>2.计算公式</h4><blockquote><ul><li>width&#x3D;内容区宽度+边框+内边距</li><li>height&#x3D;内容区高度+边框+内边距</li><li>在以上公式中，除内容区以外的都可以设置宽高，所以内容区的宽高可以反推计算</li></ul></blockquote><h4 id="3-盒模型转换"><a href="#3-盒模型转换" class="headerlink" title="3. 盒模型转换"></a>3. 盒模型转换</h4><blockquote><p>通过<code>box-sizing</code>属性切换盒子模型</p><ul><li><code>box-sizing:content-box;</code>是默认值，盒子以标准盒子模型特性来渲染</li><li><code>box-sizing:border-box;</code>使盒子以怪异盒子模型特性来渲染</li></ul></blockquote><h4 id="4-button-按钮"><a href="#4-button-按钮" class="headerlink" title="4. button 按钮"></a>4. button 按钮</h4><blockquote><ul><li><code>button</code>标签自带<code>box-sizing:border;</code>属性</li><li>所以<code>div</code>和<code>button</code>的大小是有差异的，button内缩，div外扩</li></ul></blockquote><h4 id="5-box-sizing应用场景"><a href="#5-box-sizing应用场景" class="headerlink" title="5. box-sizing应用场景"></a>5. box-sizing应用场景</h4><blockquote><ul><li><code>box-sizing</code>属性大量应用于移动网页制作中，因为它结合百分比布局、弹性布局等非常好用，在PC页面开发中使用较少</li><li>该属性兼容到IE9</li><li>若我们期望不管内容、边框、内边距大小如何变化，元素的可视宽高始终不变时，就可以给元素添加<code>box-sizing:border-box;</code>属性，以怪异盒模型来渲染</li><li>不管元素的占位宽如何变化，始终保持边框和内边距不变，希望通过改变内容区大小来达到目的</li><li>常见的响应式开发中、栅格系统等</li></ul></blockquote><h3 id="前端切图工具"><a href="#前端切图工具" class="headerlink" title="前端切图工具"></a>前端切图工具</h3><table><thead><tr><th>软件名称</th><th>功能</th><th>描述</th><th>官网下载地址</th></tr></thead><tbody><tr><td>Snipaste</td><td>截图+贴图</td><td>个人模仿他人效果可用</td><td><a href="https://zh.snipaste.com/">https://zh.snipaste.com/</a></td></tr><tr><td>PxCook</td><td>标注+代码生成(psd)</td><td>是一款连接设计师到开发者之间的协作工具</td><td><a href="https://www.fancynode.com.cn/pxcook/">https://www.fancynode.com.cn/pxcook/</a></td></tr><tr><td>Photoshop</td><td>专业的图片软件处理工具</td><td>实际企业开发设计软件</td><td><a href="https://www.adobe.com/cn/products/photoshop.html">https://www.adobe.com/cn/products/photoshop.html</a></td></tr><tr><td>蓝湖</td><td>产品设计协作平台</td><td>实际企业团队开发协作</td><td><a href="https://lanhuapp.com/">https://lanhuapp.com/</a></td></tr></tbody></table><h4 id="1-photoshop设计软件"><a href="#1-photoshop设计软件" class="headerlink" title="1.photoshop设计软件"></a>1.photoshop设计软件</h4><blockquote><p>助理老师破解版安装教程</p><ul><li>下载、解压压缩包</li><li>&#x3D;&#x3D;断网安装&#x3D;&#x3D;，断网后直接点击Set-up-exe进入安装，过程中不需要任何操作，等待5-10分钟即可</li><li>安装好后,通过window键打开</li><li>使用时，把对应的psd设计稿拖动到软件区域即可</li></ul></blockquote><h4 id="2-PxCook像素大厨"><a href="#2-PxCook像素大厨" class="headerlink" title="2.PxCook像素大厨"></a>2.PxCook像素大厨</h4><blockquote><ul><li>设计师可以免去繁琐的标注功能，前端工程师也可以更加直观的查看设计稿中的元素的内容，间距，尺寸和样式等</li><li>它还可以为工程师直接呈现选中元素的多平台样式代码和素材切图</li><li>官方使用教程：<a href="https://www.fancynode.com.cn/pxcook/docs?ids=qa/pay">https://www.fancynode.com.cn/pxcook/docs?ids=qa/pay</a></li></ul></blockquote><h4 id="3-PS与PxCook配合"><a href="#3-PS与PxCook配合" class="headerlink" title="3.PS与PxCook配合"></a>3.PS与PxCook配合</h4><blockquote><ul><li>设计师用PS设计稿设计好的PSD的效果图后，接下来的工作就是交给程序员来开发成网页</li><li>首先程序员需要把PSD设计稿按开发的需求标记qieytu切图，导出需要的图片素材</li></ul></blockquote><blockquote><ul><li>连接Pxcook和PS</li></ul><ol><li>打开PS–&gt;编辑–&gt;远程连接–&gt;启用远程连接–&gt;设置密码</li><li>打开Pxcook，点击右上角的小刀图标，输入密码，连接成功</li></ol></blockquote><blockquote><ul><li>标记切图：<ul><li>打开pxccok，建立新项目</li><li>将图片拖入PS–&gt;选择图层–&gt;窗口–&gt;扩展功能–&gt;pxccok切图–&gt;选择设备类型、分辨率、保存–&gt;导出到pxcook</li><li>在pxcook后，点击黑色区域，就可以看到PNG，点击保存</li></ul></li><li>分析效果图<ul><li>分析结构，上下结构&#x2F;左右结构</li><li>先拿到效果图，分析它的html结构</li><li>清除默认样式(样式初始化)</li><li>搭建html结构，再写CSS样式</li></ul></li><li>自定义切图的尺寸<ul><li>首先需要确保被标记的图层为图层组，若不是则需要打组</li><li>建立一个组，然后把所需的图层放入组内</li><li>在组内创建一个名为<code>@bounds</code>或<code>#</code>的·图层，通过矩形工具，在该图层内绘制一个举行来描述要切除切片的范围</li><li>打开扩展工具——pxccok标记为切图–&gt;保存–&gt;导入pxcook<br>注意：自定义切图导出到pxcook界面也是完整图，双击项目图，左边就会出现自定义切图<img src="自定义切图.png"></li></ul></li></ul></blockquote><h4 id="4-出现的问题"><a href="#4-出现的问题" class="headerlink" title="4.出现的问题"></a>4.出现的问题</h4><blockquote><ul><li>PS安装后打开时一直在加载中</li></ul><ol><li>打开编辑–&gt;首选项–&gt;常规–&gt;勾选”停用主页屏幕”<img src="PS停用主页屏幕.png"></li></ol><ul><li>PS扩展界面无法打开</li></ul><ol><li>打开注册器(在win中搜索注册器，或者按住快捷键”WIN+R”,输入”regedit”)</li><li>打开以下路径：”计算机\HKEY_CURRENT_USER\Software\Adobe\CSXS.9”</li><li>新建字符串值，输入名称”PlayerDebugMode”，值为”1”</li><li>重新打开PS即可</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css属性</title>
      <link href="/2023/11/24/css%E5%B1%9E%E6%80%A7/"/>
      <url>/2023/11/24/css%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="CSS文本属性、字体属性、列表属性"><a href="#CSS文本属性、字体属性、列表属性" class="headerlink" title="CSS文本属性、字体属性、列表属性"></a>CSS文本属性、字体属性、列表属性</h2><h3 id="CSS字体属性"><a href="#CSS字体属性" class="headerlink" title="CSS字体属性"></a>CSS字体属性</h3><h4 id="1-color属性"><a href="#1-color属性" class="headerlink" title="1.color属性"></a>1.color属性</h4><blockquote><ul><li>可设置文本内容的字体颜色</li><li>color属性有四种表示法：</li><li><strong>英文单词表示法</strong><ul><li>应用场景：仅用于学习和测试，工作中不常用</li></ul></li></ul><pre class=" language-css"><code class="language-css"><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></code></pre><ul><li><strong>十六进制表示法</strong><ul><li>设计图中标注的颜色通常为十六进制表示</li><li>每一种颜色分量都是0~255的数字，十六进制的ff就是十进制的255</li><li>如果颜色值是两两相同，并且有三对，<code>#aabbcc</code>的形式可以简写为<code>#abc</code></li><li>常用的十六进制表示法<table><thead><tr><th>色值</th><th>描述</th></tr></thead><tbody><tr><td><code>#000</code></td><td>黑色</td></tr></tbody></table></li></ul></li></ul><p>|<code>#fff</code>|白色|<br>|<code>#ccc</code>、<code>#333</code>、<code>#2f2f2f</code>、<code>#666</code>、<code>#ddd</code>|灰色|</p><ul><li><strong>rgb()表示法</strong><ul><li>rgb是红蓝绿三个单词的缩写</li><li>三个数字的范围是0~255,数字之间用<code>,</code>分隔</li></ul></li></ul><pre><code>color:rgb(255,0,0);</code></pre></blockquote><!-- 红色 --><blockquote><pre><code>- **rgba()表示法**  - 前三个数字是颜色,范围是0~255  - 第四个参数是透明度，范围是0~1，值越大越不透明  - rgba()表示法从IE9开始兼容</code></pre><p>color: rgba(255,0,0,0.5)</p><pre><code></code></pre></blockquote><h4 id="2-font-size属性"><a href="#2-font-size属性" class="headerlink" title="2.font-size属性"></a>2.font-size属性</h4><blockquote><ul><li>font-size属性用来设置文字的字号大小</li><li>单位通常为px(像素)、%(百分比)；移动端还会学习em、rem、vw、vh单位</li><li>网页文字正文默认为为16px，1em&#x3D;两个字符</li><li>浏览器最小支持12px字号</li><li><strong>面试题</strong>：如何在页面中设置小于12px的字体(学到动画时会讲)</li><li>百分比是相对于父元素的font-size而言</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token number">.</span>fon<span class="token number">1</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">12</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>fon<span class="token number">2</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">16</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>div p &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一段默认大小的文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fon1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>字体大小为12px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fot2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        父元素为16px        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>字体大小为父元素的50%<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>  </code></pre></blockquote><h4 id="3-font-weight属性"><a href="#3-font-weight属性" class="headerlink" title="3.font-weight属性"></a>3.font-weight属性</h4><blockquote><ul><li>用来设置字体的粗细程度</li><li>可以用属性值或者数字来设置大小</li><li>数字介于1~1000之间，数字越大，字体越粗</li><li>最终的粗细要在当前字体可行的精细范围之内<table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>normal</code></td><td>正常粗细，与400等值</td></tr><tr><td><code>bold</code></td><td>加粗，与700等值</td></tr><tr><td><code>lighter</code></td><td>比从父元素继承来的值更细(处在字体可行的粗细值范围内)，大多数中文字体不支持</td></tr><tr><td><code>bolder</code></td><td>比从父元素继承来的值更粗(处于字体可行的粗细范围内)大多数中文字体不支持</td></tr></tbody></table></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">      <span class="token number">.</span>we<span class="token number">1</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span> &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token number">.</span>we<span class="token number">2</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span> &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token number">.</span>we<span class="token number">3</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token number">.</span>we<span class="token number">4</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> lighter<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token number">.</span>we<span class="token number">5</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bolder<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>we1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>正常粗细<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>we2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>加粗文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>we3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        父元素为600        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>we4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>比父元素更细<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>we5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>比父元素更粗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre></blockquote><h4 id="4-font-style属性"><a href="#4-font-style属性" class="headerlink" title="4.font-style属性"></a>4.font-style属性</h4><blockquote><ul><li>设置字体的倾斜<table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>normal</code></td><td>取消倾斜，把默认倾斜的<code>i</code>、<code>em</code>等标签设置为不倾斜</td></tr><tr><td><code>italic</code></td><td>设置为倾斜字体(常用)，如果当前字体没有可用的斜体版本，会选用<code>oblique</code>替代</td></tr><tr><td><code>oblique</code></td><td>设置为倾斜字体，用常规字体模拟(不常用)</td></tr></tbody></table></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token number">.</span>sty<span class="token number">1</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    <span class="token number">.</span>sty<span class="token number">2</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    <span class="token number">.</span>sty<span class="token number">3</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-style</span><span class="token punctuation">:</span> oblique<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>这是一个默认倾斜字体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sty1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>把默认倾斜设置为不倾斜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sty2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>italic下把不倾斜的设置为倾斜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sty3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>oblique下把不倾斜设置为倾斜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre></blockquote><h4 id="5-font-family-字体类型"><a href="#5-font-family-字体类型" class="headerlink" title="5.font-family 字体类型"></a>5.font-family 字体类型</h4><blockquote><ul><li>用于设置字体类型，浏览器默认字体为”微软雅黑”</li><li>可以设置多个字体类型，字体之间用<code>,</code>分隔，如果第一个字体浏览器不支持，则会往后找；若都不支持，则会使用默认字体；</li></ul><pre><code>font-family:&quot;Times New Rowman&quot;,Times,serif;</code></pre><p>注：</p><ul><li>中文字体要用<code>&quot;&quot;</code>包裹，英文字体中若有空格，也要用<code>&quot;&quot;</code>(不加也可以)</li><li>字体通常必须是用户计算机已经安装好的字体，所以设置为:”微软雅黑””宋体”较多</li><li>中文字体也可以用英文名<table><thead><tr><th>中文字体名</th><th>英文字体名</th></tr></thead><tbody><tr><td>“微软雅黑”</td><td>“Microsoft Yahei”</td></tr><tr><td>“宋体”</td><td>“SimSun”</td></tr></tbody></table></li></ul></blockquote><h4 id="6-font-face自定义字体"><a href="#6-font-face自定义字体" class="headerlink" title="6.@font-face自定义字体"></a>6.@font-face自定义字体</h4><blockquote><ul><li>用来设置用户电脑里没有的字体，用户浏览网页时会下载相关字体</li><li>准备工作<ul><li>必须自己定义新的字体(需要有字体文件)</li><li>用户加载网页时会同时下载字体文件</li><li>字体文件需要同时拥有五种格式的文件,因为根据操作系统和浏览器不同，有<code>eot</code>、<code>woff2</code>、<code>woff</code>、<code>ttf</code>、<code>svg</code></li></ul></li><li>如何定义字体</li></ul><pre><code>@font-face&#123;    font-family: ;/*字体类型*/    src: url();  /*引入字体类型*/&#125;</code></pre><ul><li>怎么做？<ul><li>获得字体文件：建议使用免费可商用的阿里巴巴普惠字体，地址：<a href="https://www.iconfont.cn/webfont">https://www.iconfont.cn/webfont</a></li><li>输入要定义的文字，选择字体，下载字体包</li><li>使用@font-face声明字体</li><li>定义使用webfont的样式</li><li>为文字加上对应样式<br> 注：可以直接复制demo的内容</li></ul></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span>  @font-face <span class="token entity" title="&#123;">&amp;#123;</span>  <span class="token entity" title="&#125;">&amp;#125;</span><span class="token comment" spellcheck="true">&lt;!-- 使用font-face声明字体 --></span>  .web-font <span class="token entity" title="&#123;">&amp;#123;</span>  <span class="token entity" title="&#125;">&amp;#125;</span><span class="token comment" spellcheck="true">&lt;!-- 定义使用 webfont 的样式 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>要定义的文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre></blockquote><h3 id="CSS文本属性"><a href="#CSS文本属性" class="headerlink" title="CSS文本属性"></a>CSS文本属性</h3><h4 id="1-text-decoration属性-修饰线"><a href="#1-text-decoration属性-修饰线" class="headerlink" title="1.text-decoration属性-修饰线"></a>1.text-decoration属性-修饰线</h4><blockquote><ul><li>用于设置文本的修饰线外观</li><li>text-decoration是以下四个属性的简写</li><li>可以写在一行，以空格分隔</li><li><strong>注</strong>：其他三个属性的前提是<code>line</code><table><thead><tr><th>属性</th><th>属性值</th></tr></thead><tbody><tr><td>text-decoration-line</td><td>下划线<code>underline</code>、删除线<code>line-through</code>、没有修饰线<code>none</code></td></tr><tr><td>text-decoration-color</td><td>文本修饰的颜色</td></tr><tr><td>text-decoration-style</td><td>波浪线<code>wavy</code>、实线<code>solid</code>、虚线<code>dashed</code></td></tr><tr><td>text-decoration-thickness</td><td>文本修饰线的粗细</td></tr></tbody></table></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    p &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>underline red <span class="token number">5</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    div &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>wavy underline purple <span class="token number">3</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*有underline才有wavy*/</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>有红色下划线的文本，下划线粗5px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>一行有紫色波浪线的文本，线粗3px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre></blockquote><h4 id="2-text-indent首行缩进"><a href="#2-text-indent首行缩进" class="headerlink" title="2.text-indent首行缩进"></a>2.text-indent首行缩进</h4><blockquote><ul><li>定义首行文本内容之前的缩进量</li><li>常用单位是<code>em</code>、<code>2em</code>是两个字符的宽度</li><li>默认字符大小是16px，如果没有单独设置，那么2em&#x3D;32px</li></ul><pre class=" language-css"><code class="language-css">&lt;style>        <span class="token number">.</span>line<span class="token number">1</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">2</span>em<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*字体大小为32px*/</span>        <span class="token number">.</span>line<span class="token number">2</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">text-indent</span><span class="token punctuation">:</span><span class="token number">2</span>em<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*首行缩进2em，也就是32px*/</span>        <span class="token number">.</span>line<span class="token number">3</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">2</span>em<span class="token punctuation">;</span><span class="token property">text-indent</span><span class="token punctuation">:</span><span class="token number">2</span>em<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*字体大小为32px,首行缩进4em=64px*/</span>&lt;/style>&lt;body>    &lt;p class=<span class="token string">"line1"</span>>默认文本，设置字体大小是两字符&lt;/p>    &lt;p class=<span class="token string">"line2"</span>>首行缩进两字符&lt;/p>    &lt;p class=<span class="token string">"line3"</span>>首行缩进两字符，字体大小为两字符&lt;/p>&lt;/body></code></pre></blockquote><h4 id="3-行高"><a href="#3-行高" class="headerlink" title="3.行高"></a>3.行高</h4><blockquote><ul><li>行高的测量方式<img src="测量行高.png"></li><li>①②是行高测量上的定义，&#x3D;&#x3D;③&#x3D;&#x3D;是行高的真实定义：文字所占空间高度的总高，文字在这个高度的垂直方向&#x3D;&#x3D;居中&#x3D;&#x3D;显示</li><li>主段落内容的行高至少应为<code>1.5</code></li><li>如果文字的大小要随页面的缩放而变化，请使用无单位的数值，以确保行高会等比例的缩放</li><li>行高的值<table><thead><tr><th>单位</th><th>实例</th><th>说明</th></tr></thead><tbody><tr><td>px</td><td><code>line-height:30px;</code></td><td>行高为30px</td></tr><tr><td>数值表示法</td><td><code>line-height:2;</code></td><td>字号大小的两倍这是<strong>最推荐</strong>的写法，工作中常用倍数是<code>1.25,1.5,1.75</code></td></tr><tr><td>百分比表示法</td><td><code>line-height:200%;</code></td><td>字号大小的两倍</td></tr><tr><td>normal</td><td><code>line-height:normal</code>;</td><td>取决于客户端。桌面浏览器(包括Firefox)使用默认值，约为<code>1.2</code>，这取决于元素的<code>font-family</code></td></tr></tbody></table></li></ul><pre class=" language-css"><code class="language-css">&lt;style>    <span class="token number">.</span>p<span class="token number">1</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span>         <span class="token property">background-color</span><span class="token punctuation">:</span>skyblue<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>     div &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">40</span>px<span class="token punctuation">;</span>         <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>         <span class="token property">font-family</span><span class="token punctuation">:</span><span class="token string">"宋体"</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>     <span class="token number">.</span>p<span class="token number">2</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span>         <span class="token property">background-color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>         <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"微软雅黑"</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>     <span class="token number">.</span>p<span class="token number">3</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">line-heigt</span><span class="token punctuation">:</span>normal<span class="token punctuation">;</span>         <span class="token property">background-color</span><span class="token punctuation">:</span>coral<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span> &lt;/style>&lt;body>&lt;p class=<span class="token string">"p1"</span>>设置行高为<span class="token number">20</span>px&lt;/p> &lt;div>这是一行行高<span class="token number">40</span>px的宋体&lt;/div> &lt;p class=<span class="token string">"p2"</span>>这是行高为<span class="token number">3</span>的微软雅黑&lt;/p> &lt;p class=<span class="token string">"p3"</span>>行高为normal的文字&lt;/p>&lt;/body></code></pre></blockquote><h4 id="4-行文本垂直、水平居中"><a href="#4-行文本垂直、水平居中" class="headerlink" title="4.行文本垂直、水平居中"></a>4.行文本垂直、水平居中</h4><blockquote><ul><li>行文本垂直居中</li><li>设置**行高&#x3D;盒子高度(height)**，即可实现单行文本垂直居中</li><li>对行内块元素无效</li></ul><pre><code>line-height: height的高度；</code></pre></blockquote><blockquote><ul><li>text-align属性<ul><li>定义<strong>行内内容</strong>(例如文字、图片、行内块元素)相对它的块父元素的对齐方式</li><li>注：块级元素不能用这个属性</li><li>常用属性值：<code>left</code>、<code>right</code>、<code>center</code></li></ul></li></ul><pre class=" language-css"><code class="language-css">&lt;style>    <span class="token number">.</span>l &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    <span class="token number">.</span>c &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    <span class="token number">.</span>r &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>right<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&lt;/style>&lt;body>    &lt;p class=<span class="token string">"l"</span>>这是居左文字&lt;/p>    &lt;p class=<span class="token string">"c"</span>>这是居中文字&lt;/p>    &lt;p class=<span class="token string">"r"</span>>这是居右文字&lt;/p>&lt;/body></code></pre></blockquote><h4 id="5-font合写属性"><a href="#5-font合写属性" class="headerlink" title="5.font合写属性"></a>5.font合写属性</h4><blockquote><ul><li>font属性可以用来作为<code>font-style</code>、<code>font-weight</code>、<code>font-size</code>、<code>line-height</code>、<code>font-family</code>属性的合写</li><li>写法<ul><li>font属性连写时，必须设置<code>font-size</code>和<code>font-family</code>才能生效</li><li><code>font-style</code>和<code>font-weight</code>必须放在<code>font-size</code>之前</li><li>连写时任何未指定的值都将设置为其对应的初始值，所以即使没有写行高，也有默认行高1.2<br>-行高写在<code>fon-size</code>后面，用<code>/</code>分隔</li></ul></li></ul><pre class=" language-css"><code class="language-css"><span class="token property">font</span><span class="token punctuation">:</span>italic <span class="token number">20</span>px/<span class="token number">1.2</span> <span class="token string">"宋体"</span><span class="token punctuation">;</span></code></pre></blockquote><h4 id="6-word-spacing字间距"><a href="#6-word-spacing字间距" class="headerlink" title="6.word-spacing字间距"></a>6.word-spacing字间距</h4><blockquote><ul><li>对中文无效，仅对英文单词有效<table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>正常的单词间距，有字体和&#x2F;或浏览器定义</td></tr><tr><td>长度</td><td>通过指定具体额外间距来增加字体的单词间距,可以是负数</td></tr></tbody></table></li></ul></blockquote><h4 id="7-letter-spacing字符间距"><a href="#7-letter-spacing字符间距" class="headerlink" title="7.letter-spacing字符间距"></a>7.letter-spacing字符间距</h4><blockquote><ul><li>用于设置文本字符的间距</li><li>对中文和英文都有效，单词会被分隔成一个个字母<table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>正常的单词间距，有字体和&#x2F;或浏览器定义</td></tr><tr><td>长度</td><td>通过指定具体额外间距来增加字体的单词间距,可以是负数</td></tr></tbody></table></li></ul></blockquote><blockquote><pre><code>&lt;style&gt;    .word1 &#123;word-spacing:normal;&#125;    .word2 &#123;word-spacing:-10px;&#125;    .letter1 &#123;letter-spacing:10px;&#125;    .letter2 &#123;letter-spacing:-10px;&#125;    .lo &#123;letter-spacing:10px;&#125;    &lt;/style&gt;&lt;body&gt;    &lt;p class=&quot;word1&quot;&gt;I love you ,我爱你,正常间距&lt;/p&gt;    &lt;p class=&quot;word2&quot;&gt;I love you ,我爱你,负间距&lt;/p&gt;    &lt;p class=&quot;letter1&quot;&gt;I love you ,我爱你,10Px间距&lt;/p&gt;    &lt;p class=&quot;letter2&quot;&gt;I love you ，我爱你，负间距&lt;/p&gt;    &lt;div&gt;I love you&lt;p class=&quot;lo&quot;&gt;我爱你&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;</code></pre></blockquote><h3 id="列表样式"><a href="#列表样式" class="headerlink" title="列表样式"></a>列表样式</h3><h4 id="1-list-style-type"><a href="#1-list-style-type" class="headerlink" title="1.list-style-type"></a>1.list-style-type</h4><blockquote><ul><li>设置列表项标记的类型</li><li>实际开发中的一般会把前面的标记类型去掉，用做好的小图标替代<table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>无标记(去掉圆点)</td></tr><tr><td>disc</td><td>默认，实心圆</td></tr><tr><td>circle</td><td>空心圆</td></tr><tr><td>square</td><td>实心方块</td></tr><tr><td>decimal</td><td>数字</td></tr><tr><td>decimai-leading-zero</td><td>0开头的数字，01、02、03</td></tr><tr><td>lower-alpha</td><td>小写英文字母</td></tr><tr><td>upper-alpha</td><td>大写英文字母</td></tr><tr><td>……</td><td>标记的类型有20多项，但实际开发中几乎不用</td></tr></tbody></table></li></ul></blockquote><blockquote><p><strong>联系之前在HTML学过的列表标签</strong>:<br>注：<code>style=&quot;&quot;</code>等于写在<code>&lt;style&gt;</code>标签里</p><table><thead><tr><th>html(已废弃)</th><th>CSS</th></tr></thead><tbody><tr><td><code>type=&quot;circle&quot;</code></td><td><code>style=&quot;list-style-type:circle&quot;</code></td></tr><tr><td><code>ol-li</code></td><td><code>list-type:decimal</code></td></tr></tbody></table></blockquote><h4 id="2-list-style-image"><a href="#2-list-style-image" class="headerlink" title="2.list-style-image"></a>2.list-style-image</h4><blockquote><ul><li>用来指定列表中的列表标记图像，几乎不用<table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>URL</td><td>图像的路径</td></tr><tr><td>none</td><td>默认，无图形被现实</td></tr><tr><td>inherit</td><td>规定从父元素继承该属性的值</td></tr></tbody></table></li></ul></blockquote><h4 id="3-list-style-position"><a href="#3-list-style-position" class="headerlink" title="3.list-style-position"></a>3.list-style-position</h4><blockquote><ul><li>规定列表中列表项目标记的位置，几乎不用<table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>inside</td><td>列表标记项目放置在文本以内，环绕文本并根据标记对齐</td></tr><tr><td>outside</td><td>默认，标记位于文本的左侧、且放置在文本以外，环绕文本不根据标记对齐</td></tr><tr><td>inherit</td><td>规定从父元素继承该属性的值</td></tr></tbody></table></li></ul></blockquote><h4 id="4-list-style"><a href="#4-list-style" class="headerlink" title="4.list-style"></a>4.list-style</h4><blockquote><ul><li>这是以上三个的综合写法</li></ul><pre class=" language-css"><code class="language-css"><span class="token property">list-style</span><span class="token punctuation">:</span>delcima-leading-zero outside<span class="token punctuation">;</span></code></pre><ul><li>实际开发中用的最多的是去掉标记:<code>list-style-type:none;</code>、<code>list-style:none;</code></li></ul></blockquote><h2 id="CSS-display属性、背景属性、其他常用属性"><a href="#CSS-display属性、背景属性、其他常用属性" class="headerlink" title="CSS display属性、背景属性、其他常用属性"></a>CSS display属性、背景属性、其他常用属性</h2><h3 id="一、display属性"><a href="#一、display属性" class="headerlink" title="一、display属性"></a>一、display属性</h3><h4 id="1-display属性的作用"><a href="#1-display属性的作用" class="headerlink" title="1. display属性的作用"></a>1. display属性的作用</h4><blockquote><p><code>display</code>属性可以设置元素的<strong>内部</strong>和<strong>外部</strong>显示类型</p><ul><li>外部显示类型：<ul><li>元素的外部显示类型有block块、inline内联等</li><li>外部显示类型将决定该元素在<strong>流式布局</strong>中的表现</li></ul></li><li>内部显示类型：<ul><li>内部显示类型flex布局、grid网格布局、流失布局等</li><li>元素的内部显示类型可以控制其子元素的布局方式</li></ul></li></ul></blockquote><blockquote><p>流失布局(文档流或常规流)</p><ul><li>它是指在对布局进行任何更改之前(默认情况下)，在页面上显示”块”和”内联”元素的方式</li><li>简单来说，它是一种排版方式，这种排版方式规定了块级和内联元素在页面中如何排版显示<br>【流失布局】中<strong>块级元素</strong>排版方式</li><li>块级盒子会从包含块的顶部开始，按序<strong>垂直</strong>排列</li><li>同级盒子间的垂直距离会由<code>margin</code>属性决定</li><li>相邻两个块级盒子之间的垂直间距会遵循外边距折叠原则被折叠<br>【流失布局】中<strong>内联元素</strong>排版方式</li><li>盒子会从包含块的顶部开始，按序<strong>水平</strong>排列</li><li>只有水平外边距、边框和内边距会被保留<br>这些盒子可以以不同方式在垂直方向上对齐：可以底部对齐或顶部对齐，或者按文字底部进行对齐</li></ul><p>内部显示类型后面会讲</p></blockquote><h4 id="2-元素外部显示类型"><a href="#2-元素外部显示类型" class="headerlink" title="2. 元素外部显示类型"></a>2. 元素外部显示类型</h4><blockquote><p>display通过以下属性值来制定元素的显示类型</p><ul><li>bolck 块级</li><li>inline-block 行内块</li><li>inline 行内<br>元素显示类型分为：块级和内联等<br>内联(行内)元素又分为：inline内联元素和inline-block行内块元素(可替换元素)</li></ul></blockquote><blockquote><ol><li>block块级元素</li></ol><ul><li>常见的块级元素有：<br> <code>p</code>、<code>div</code>、<code>ul</code>、<code>ol</code>、<code>li</code>、<code>h</code>、<code>dl</code>等</li><li>块级元素的特点<ul><li>独占一行</li><li>可以设置宽高</li><li>在不设置宽高的情况下，宽默认为父元素内容区宽</li><li>一般来说块级元素里可以放任意元素，不过文字类元素标签内不能放其他块元素：<ul><li>p标签里不能放p和div标签</li><li>h1~h6标签里不能放p,div标签</li></ul></li></ul></li></ul></blockquote><blockquote><ol start="2"><li>inline-block行内块元素</li></ol><ul><li>以下元素具有行内块元素的特性，但本质上叫”可替换元素”(归类归到行内元素):<br><code>img</code>、<code>表单类元素</code>、<code>video</code>、<code>audio</code>等</li><li>行内块元素的特点 <ul><li>相邻的行内块元素&#x2F;行内元素会在一行显示、放不下时会换行</li><li>相邻的行内块元素之间会有<strong>空白间隙</strong>(后面有案例解决这个问题)</li><li>元素默认宽为它本身内容宽</li><li>可设置width、height属性</li></ul></li></ul></blockquote><blockquote><ol start="3"><li>inline内联&#x2F;行内元素</li></ol><ul><li>常见的行内元素有：<code>a</code>、<code>strong</code>、<code>span</code>、<code>i</code>、<code>del</code>等</li><li>行内元素特点：<ul><li>相邻的行内元素会在一行显示，放不下时会换行显示</li><li>宽高的设置是无效的，其宽高随内容撑开</li><li>行内元素只能放文本或其他行内元素</li></ul></li><li>注意<ul><li><code>&lt;a&gt;</code>标签里不能再放<code>&lt;a&gt;</code>标签</li><li>但<code>&lt;a&gt;</code>标签里可以放块级元素</li><li>实际开发中，在某些情况下会把a标签转换为块级元素</li></ul></li></ul></blockquote><blockquote><p>总结:三种元素类型对比</p><table><thead><tr><th>元素类型</th><th>排列方式</th><th>盒模型属性</th><th>内容</th></tr></thead><tbody><tr><td>块级block</td><td>独占一行</td><td>宽高有效</td><td>任意元素，p&#x2F;h特别</td></tr><tr><td>行内块line-block</td><td>不独占</td><td>可设置高</td><td>行内或行内块元素</td></tr><tr><td>内联inline</td><td>不独占</td><td>宽高设置无效</td><td>行内&#x2F;文本元素，a特别</td></tr></tbody></table></blockquote><blockquote><ol start="4"><li>相互转换</li></ol><ul><li><code>display:block;</code>将元素转换为块级元素</li><li><code>diaplay:inline;</code>将元素转换为行内元素</li><li><code>display：inline-block</code>将元素转换为行内块</li></ul></blockquote><blockquote><ol start="5"><li>隐藏元素<table><thead><tr><th>属性</th><th>功能</th><th>描述</th></tr></thead><tbody><tr><td><code>diaplay:none;</code></td><td>隐藏元素</td><td>可以将元素隐藏；只要父元素隐藏，子孙元素就没有任何办法可见。元素隐藏后不会占空间，就好比页面中没有加过这个元素</td></tr><tr><td><code>display:hidden：</code></td><td>隐藏元素</td><td>将元素隐藏；如果父元素隐藏，子孙元素会隐藏，但是给子孙加上<code>visibility:visible;</code>时，子孙可见；隐藏后仍占其位置，会留下空白区域。基本不用</td></tr></tbody></table></li></ol><ul><li>注：<code>display</code>除<code>none</code>以外的值，均为显示元素</li></ul></blockquote><blockquote><ol start="6"><li>常见大厂面试题</li></ol></blockquote><ul><li><code>display:none;</code>和<code>visibility:hidden;</code>二者的区别？<table><thead><tr><th>区别</th><th>display:none;</th><th>visibility:hidden;</th></tr></thead><tbody><tr><td>空间占据性</td><td>不占空间</td><td>占空间</td></tr><tr><td>回流与渲染性</td><td>会产生回流与重绘</td><td>不会产生回流，只会产生重绘</td></tr><tr><td>对子孙元素的影响</td><td>子孙元素全部不可见，并没有任何办法可见</td><td>子孙元素全部不可见，但是加上<code>visibility:visible；</code>就可见</td></tr></tbody></table></li></ul><blockquote><ol start="7"><li>去掉行内块元素默认的空白间隙</li></ol><ul><li>产生间隙的原因<ul><li>元素被当成行内元素排版的时候，元素之间的空白符(空格&#x2F;回车、换行等)都会被浏览器处理</li><li>根据white-space的处理方式(默认为normal，合并多余空白)，原来HTML代码中的空白符被转换成了一个空白符，所以元素之间出现了空隙</li><li>这些元素之间的间距会随着字体的大小而变化</li></ul></li><li>解决办法<ul><li>给父元素加上<code>font-size:0px;</code>,给子元素重写<code>font-size</code></li><li>给元素添加<code>float</code></li><li>图片间的空隙，给图片添加<code>display:block;</code>变成块级元素后，独占一行，空白间隔消失;更好的办法是添加<code>vertical-align:top;</code></li></ul></li></ul></blockquote><h3 id="二、background背景属性"><a href="#二、background背景属性" class="headerlink" title="二、background背景属性"></a>二、background背景属性</h3><h4 id="1-background-color背景颜色"><a href="#1-background-color背景颜色" class="headerlink" title="1.background-color背景颜色"></a>1.background-color背景颜色</h4><blockquote><ul><li>背景颜色可以用十六进制、rgb()、rgba()、英文单词表示</li><li>padding区域是有背景颜色的</li></ul></blockquote><h4 id="2-background-image图片"><a href="#2-background-image图片" class="headerlink" title="2.background-image图片"></a>2.background-image图片</h4><blockquote><ul><li>用于设置背景图片</li><li>图片路径要写在<code>url()</code>圆括号里，可以是相对路径，也可以是绝对路径</li><li>地址相对路径是从CSS样式的位置出发(特别注意外部样式)</li><li>写法：<br><code>background-image: url();</code></li></ul></blockquote><h4 id="3-background-repeat重复"><a href="#3-background-repeat重复" class="headerlink" title="3.background-repeat重复"></a>3.background-repeat重复</h4><blockquote><ul><li>用来设置背景图片的重复模式</li><li>属性值<table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td><code>repeat;</code></td><td>x,y均平铺(默认)</td></tr><tr><td><code>repeat-x;</code></td><td>x平铺</td></tr><tr><td><code>repeat-y;</code></td><td>y平铺</td></tr><tr><td><code>no-repeat;</code></td><td>不平铺</td></tr></tbody></table></li></ul></blockquote><h4 id="4-background-position-背景图片位置"><a href="#4-background-position-背景图片位置" class="headerlink" title="4.background-position 背景图片位置"></a>4.background-position 背景图片位置</h4><blockquote><ul><li>用来控制背景图片在盒子中&#x3D;&#x3D;显示&#x3D;&#x3D;的开始位置</li><li>背景图片位置默认是从padding区开始计算，要将内边距算进去</li><li>写法<br><code>background-position:  ;</code></li><li>位置表示法<table><thead><tr><th>写法</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>数值表达法(x y)</td><td>两个值</td><td>x：与盒子左边距离 y与盒子上边距离</td></tr><tr><td>数值表达法(x)</td><td>单个值</td><td>数值只表示x，垂直方向居中显示</td></tr><tr><td>百分比表达法(x% y%)</td><td>两个值</td><td>左偏移量&#x3D;(容器width+左右padding-背景图width)<code>*</code>百分比,上偏移量&#x3D;(容器height+上下padding-背景图height)<code>*</code>百分比</td></tr><tr><td>百分比表达法(x%)</td><td>单个值</td><td>该值表示x%，垂直方向水平居中</td></tr><tr><td>关键字表达法</td><td>两个值</td><td>垂直方向 水平方向</td></tr><tr><td>关键字表达法</td><td>单个值</td><td>center被省略</td></tr></tbody></table></li></ul></blockquote><blockquote><ul><li>负值情况：<ul><li>在数值和百分比表达法下，可以使用负值</li><li>右是水平的正方向，下是垂直的正方向。所以负值代表向左、向上移动</li></ul></li><li>关键词表达法<br> 可以用<code>(top、bottom)</code>、<code>(center)</code>、<code>(left、right)</code>三组中的任意两个组的一个值进行组合，也可以用单个值<ul><li>单一关键字与对应组合关键字表示法<table><thead><tr><th>单一关键字</th><th>等价的组合关键字</th></tr></thead><tbody><tr><td>center</td><td>center center</td></tr><tr><td>top</td><td>top center或center top</td></tr><tr><td>bottom</td><td>bottom center或center bottom</td></tr><tr><td>left</td><td>left center或center left</td></tr><tr><td>right</td><td>right center或center right</td></tr></tbody></table></li></ul></li></ul></blockquote><h4 id="5-background复合属性"><a href="#5-background复合属性" class="headerlink" title="5.background复合属性"></a>5.background复合属性</h4><blockquote><ul><li><code>background-color</code>、<code>background-image</code>、<code>background-repeat</code>、<code>background-position</code>可以进行合写</li><li>不包括background-size&#x2F;clip&#x2F;origin&#x2F;attachment!!!</li><li>合写用的非常多，而其中的单条一般用来进行层叠</li><li>写法：<br><code>background:red url() no-repeat 10px 20px;</code></li><li>复合写法中，省略未写的值会以默认值替代<ul><li>背景色默认为透明色</li><li>背景图片默认为没有</li><li>重复默认为左右平铺</li><li>图片位置默认为0% 0%</li></ul></li></ul></blockquote><h4 id="6-CSS精灵图"><a href="#6-CSS精灵图" class="headerlink" title="6.CSS精灵图"></a>6.CSS精灵图</h4><blockquote><ul><li>将多个小图标合并制作在一张图上</li><li>使用<code>background-position</code>属性单独显示其中一个</li><li>这样的技术叫做CSS精灵技术，也叫作CSS雪碧图</li><li>CSS精灵可以减少HTTP请求数，加快网页显示速度，但缺点也很明显：不方便测量，后期改动麻烦</li><li>适用于小图，大图不合适</li><li>使用Pxcook测量距离,注意正负值</li></ul></blockquote><h4 id="7-background-attachment-背景固定"><a href="#7-background-attachment-背景固定" class="headerlink" title="7.background-attachment 背景固定"></a>7.background-attachment 背景固定</h4><blockquote><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><code>scroll</code></td><td>默认值，背景图片相对于元素本身固定，但随页面滚动而滚动</td></tr><tr><td><code>fixed</code></td><td>背景相对于视口固定。即使一个元素拥有滚动机制，背景也不会随着元素的内容滚动</td></tr><tr><td><code>local</code></td><td>背景相对于元素的内容固定，如果一个元素拥有滚动机制，背景会随元素的内容滚动，同时背景图片随着页面的滚动而滚动</td></tr></tbody></table></blockquote><blockquote><ul><li>srcoll <img src="scroll.gif">背景图随页面滚动条移动，但不随元素内容移动</li><li>fixed <img src="fixed.gif">背景图固定在页面左上角，不随元素且不随页面滚动</li><li>local <img src="local.gif">背景图随页面一起滚动，也随元素内容滚动</li></ul></blockquote><h4 id="8-background-size背景尺寸"><a href="#8-background-size背景尺寸" class="headerlink" title="8.background-size背景尺寸"></a>8.background-size背景尺寸</h4><blockquote><p><code>backgroung-size: ;</code></p><table><thead><tr><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>x y</td><td>分别表示背景图的宽高</td></tr><tr><td>x% y%</td><td>百分比是相对于盒子的宽高而言</td></tr><tr><td>x auto</td><td>x可以是数值也可以是百分比，auto是相对于宽来自动缩放</td></tr><tr><td>contain</td><td>背景图片智能改变尺寸以容纳到盒子里，把图片全部展示出来</td></tr><tr><td>cover</td><td>智能改变尺寸以撑满盒子，填充盒子的每个角落</td></tr></tbody></table></blockquote><h4 id="9-background-clip"><a href="#9-background-clip" class="headerlink" title="9.background-clip"></a>9.background-clip</h4><blockquote><ul><li>设置元素的北京(图片或颜色)是否延展到边框、内边距、内容<table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>border-box</td><td>默认值，背景绘制在边框方框内</td></tr><tr><td>padding-box</td><td>背景绘制在内边距方框内</td></tr><tr><td>content-box</td><td>背景绘制在内容方框内</td></tr><tr><td>text</td><td>背景被裁剪成文字的前景色</td></tr></tbody></table></li><li>使用text时，要将文字颜色设置为透明才能看到效果</li></ul></blockquote><pre class=" language-css"><code class="language-css"><span class="token number">.</span>box<span class="token number">4</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">30</span>px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">50</span>px solid <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* background-image:linear-gradient(to right,red, blue, green); */</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(../../src/image/peakflower.webp)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 背景被裁剪成文字的前景色,可以用渐变或图片*/</span>    <span class="token property">background-clip</span><span class="token punctuation">:</span>text<span class="token punctuation">;</span>    <span class="token property">-webkit-background-clip</span><span class="token punctuation">:</span>text<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 除文字下的背景以外都隐藏 */</span>     <span class="token property">color</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">/* 文字颜色设置为透明 */</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h4 id="10-background-origin"><a href="#10-background-origin" class="headerlink" title="10.background-origin"></a>10.background-origin</h4><blockquote><ul><li>背景图片的定位区域<table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>padding-box</td><td>背景图片的摆放以padding区域为参考(默认值)</td></tr><tr><td>border-box</td><td>背景图片的摆放以border区域为参考</td></tr><tr><td>content-box</td><td>背景图片的摆放以content区域为参考</td></tr><tr><td><img src="origin.png"></td><td></td></tr></tbody></table></li></ul></blockquote><h3 id="三、线性渐变"><a href="#三、线性渐变" class="headerlink" title="三、线性渐变"></a>三、线性渐变</h3><blockquote><ul><li>在background-image属性下，创建线性渐变背景</li><li>用<code>,</code>分隔方向和不同颜色<br><code>background-image:linear-gradient(direction,color);</code><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td><code>direction</code></td><td>指定渐变的方向</td></tr><tr><td><code>color</code></td><td>用于指定渐变的起止颜色</td></tr></tbody></table></li></ul></blockquote><ol><li>方向<blockquote><ul><li>未设置角度：则默认从上而下渐变</li><li>用关键词来指定渐变方向</li></ul></blockquote><ul><li>to (top,bottom) (left,right)<blockquote><ul><li>用度数来指定渐变方向,度数单位为deg,顺时间方向<br><code>background-image:linear-gradient(45deg,red,blue)</code></li></ul></blockquote></li></ul></li><li>颜色<blockquote><ul><li>多个颜色值，可以用百分数定义纯净的该颜色的起始点，百分数写在颜色后面(颜色的分布范围是从前往起始点渗透)<br><code>background-img:linear-gradient(red 40%,blue 50%)</code></li><li>转换中点是指：两个颜色相互融合的交点</li><li>默认转换中点：两个颜色转换的中点</li><li>自定义转换中点：在两个颜色之间添加未标记的%，以指示颜色的中转位置<br><code>background-img:linear-gradient(red,40%,blue)</code></li><li>未设置0%和100%的终止色<ul><li>默认情况下，如果不带0%终止的颜色，则起始色为声明的第一个颜色</li><li>最后一种颜色将持续到100%标记，或者如果在最后一个没有声明长度时，则在100%标记处</li></ul></li></ul><pre><code>.box7 &#123; background-image: linear-gradient(yellow,red,blue); &#125;.box8 &#123; background-image: linear-gradient(green 0%,20%，yellow ,red,blue,green100%); &lt;!-- green 0%表示纯净的绿色在0%，但0%处是看不到的所以能看到的是更浅的绿色渗透出来,20%的地方是黄绿两色的转换中点 --&gt; &#125;</code></pre><ul><li>没有颜色转换的情况<ul><li>纯净色的终止点就是转换中点</li></ul></li></ul></blockquote></li></ol><pre><code>.box &#123;    background-image: linear-gradient(yellow 20%,20%,red,blue);    &#125;</code></pre><ol start="3"><li>浏览器私有前缀<blockquote><ul><li>不同浏览器有不同的私有前缀，用来对实验性质的CSS属性加以标识<table><thead><tr><th>浏览器</th><th>前缀</th></tr></thead><tbody><tr><td>Chrome浏览器</td><td><code>-webkit-</code></td></tr><tr><td>Firefox火狐</td><td><code>-moz-</code></td></tr><tr><td>IE、Edge</td><td><code>-ms-</code></td></tr><tr><td>欧朋</td><td><code>-o-</code></td></tr></tbody></table></li></ul></blockquote></li></ol><pre><code>background-image:-webkit-linear-gradient(to top,gold,red)background-image:-moz-linear-gradient(to top,gold,red)background-image:-ms-linear-gradient(to top,gold,red)background-image:-o-linear-gradient(to top,gold,red)</code></pre><ol start="4"><li>渐变色工具<br><a href="https://c.runoob.com/more/gradients/#Omolon">https://c.runoob.com/more/gradients/#Omolon</a></li></ol><h3 id="四、径向渐变"><a href="#四、径向渐变" class="headerlink" title="四、径向渐变"></a>四、径向渐变</h3><blockquote><ul><li>盒子的background-image属性可以用radial-gradient()形式创建径向渐变背景图</li><li>径向渐变由其中心点、边缘形状轮廓、两个或多个色值结束点定义而成</li></ul></blockquote><ol><li>设置颜色节点<br><code>color 10%</code>：设置颜色转换中点<br><code>color,10%,</code>：设置颜色起始点</li><li>设置径向渐变的形状 shape<br><code>ellipse</code>表示椭圆形(默认)<br><code>circle</code>表示圆形</li><li>指定径向渐变中心位置 position<br><code>at 10px 20px</code></li><li>指定不同尺寸的大小<br>|值|描述|<br>|<code>fathest-corner</code>|(默认)：渐变的边缘形状与容器距离渐变中心点最远的一个角相交|<br>|<code>closest-corner</code>|渐变的边缘形状与容器距离渐变中心点最近的一个角相交(水平与垂直边相交)|<br>|<code>fathest-side</code>|与closest-side相反，边缘形状与容器距离渐变中心点最远的一边相切(或最远的垂直或水平边)|<br>|<code>closest-side</code>|圆形：渐变的边缘形状与容器距离渐变中心点最近的一边想切；椭圆：距离渐变中心点最近的垂直和水平边相切|<blockquote><ul><li>径向渐变-椭圆<img src="径向渐变-椭圆.png"></li><li>径向渐变-圆<img src="径向渐变-圆.png"></li><li>注意：<code>shape</code>、<code>position</code>、<code>尺寸的关键词</code>，彼此之间用&#x3D;&#x3D;空格&#x3D;&#x3D;分隔，但是与颜色之间用<code>,</code>分隔。</li></ul></blockquote></li></ol><h3 id="五、背景相关属性的补充"><a href="#五、背景相关属性的补充" class="headerlink" title="五、背景相关属性的补充"></a>五、背景相关属性的补充</h3><blockquote><ul><li><code>background-image/size/position/repeat</code>后面都可以设置多个值，每组值之间用<strong>逗号</strong>分隔<ul><li>每个属性之间用逗号分割的值，都按顺序<strong>一一对应</strong>，如果后面的值没有写，则以当前属性设置的<strong>第一组值</strong>为默认显示</li></ul></li><li>线性渐变&#x2F;径向渐变实质上是绘制背景图片，所以既可以和<code>url()</code>写在一起，又可以被&#96;size&#x2F;position&#x2F;repeat等属性控制</li></ul></blockquote><h3 id="六、其他常用属性"><a href="#六、其他常用属性" class="headerlink" title="六、其他常用属性"></a>六、其他常用属性</h3><h4 id="1-cursor鼠标样式"><a href="#1-cursor鼠标样式" class="headerlink" title="1.cursor鼠标样式"></a>1.cursor鼠标样式</h4><blockquote><ul><li>设置光标的类型，在鼠标指针悬停在元素上时显示相应样式</li><li>可以用属性值设置样式，也可以用图片设置光标样式(即用url自定义)<br><code>cursor:crosshair;</code><br><code>cursor:url(自定义图片地址),pointer;</code>pointer是备用样式<table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>url</td><td>需使用的自定义光标的URL.注释:请在此列表的末端始终定义一种普通的光标，一方没有由URL定义的可用光标</td></tr><tr><td>default</td><td>默认光标(通常是一个箭头)</td></tr><tr><td>auto</td><td>默认，浏览器设置的光标</td></tr><tr><td>crosshair</td><td>光标呈现为十字线</td></tr><tr><td>pointer</td><td>光标呈现为指示链接的指针(一只手)</td></tr><tr><td>move</td><td>此光标指示某对象可被移动,四个箭头</td></tr><tr><td>n-resize</td><td>此光标指示矩形框的边缘可被向上(向北)移动</td></tr><tr><td>s-resize</td><td>向下(南)</td></tr><tr><td>w-resize</td><td>向左(西)</td></tr><tr><td>e-resize</td><td>向右(东)</td></tr><tr><td>ne-resize</td><td>东北向</td></tr><tr><td>nw-resize</td><td>西北向</td></tr><tr><td>se-resize</td><td>东南向</td></tr><tr><td>sw-resize</td><td>西南向</td></tr><tr><td>text</td><td>此光标指示文本</td></tr><tr><td>wait</td><td>此光标指示程序正忙(转圈圈&#x2F;一只表&#x2F;沙漏)</td></tr><tr><td>help</td><td>此光标指示可用的帮助(一个问号或一个气球)</td></tr></tbody></table></li></ul></blockquote><blockquote><ul><li>关于url这个值需要注意：<ul><li>图片地址，在实际开发中一般为绝对路径</li><li>图片大小最好是<code>32*32</code>的大小(各浏览器支持大小不一，但32都ok)</li><li>图片格式，不同浏览器格式不一，可以是<code>png</code>、<code>svg</code>、<code>ico</code>、<code>cur</code>，一般以ico和cur为主</li><li>ico在线图标生成器：<code>https://www.bitbug.net/</code></li></ul></li><li>文件路径有中文时，可以从浏览器复制地址</li></ul></blockquote><h4 id="2-outline外轮廓"><a href="#2-outline外轮廓" class="headerlink" title="2.outline外轮廓"></a>2.outline外轮廓</h4><blockquote><ul><li>用于设置元素周围的轮廓，其用法与borser属性一样<br><code>outline:1px solid red;</code></li><li>小属性：<ul><li><code>outline-width</code>边框宽</li><li><code>outline-style</code>边框风格</li><li><code>outline-color</code>边框颜色<br>与<code>border</code>的区别</li><li><code>outline</code>不占据空间，绘制于元素内容周围的轮廓，不参与盒子模型的占位计算，不会因为添加这个属性，而造成盒子占位空间变化</li><li><code>outline</code>没办法单独控制某一边效果，也就是没有<code>outline-left</code>等属性</li><li><code>border</code>参与盒子模型计算，会因为边框值的变化而造成盒子占位空间的变化</li></ul></li></ul></blockquote><blockquote><ul><li>去掉表单元素默认的outline属性<ul><li><code>outline</code>的值设置为<code>0</code>或<code>none</code>会移除元素的默认轮廓</li><li>表单元素为了增加其可访问性(聚焦提示)，都有默认的outline值.在点击该元素后会出现黑色的外轮廓<img src="outlin.png"></li></ul></li></ul><pre><code> input &#123;    outline:none; &#125;</code></pre></blockquote><h4 id="3-overflow超出部分隐藏"><a href="#3-overflow超出部分隐藏" class="headerlink" title="3.overflow超出部分隐藏"></a>3.overflow超出部分隐藏</h4><blockquote><ul><li>该属性规定当内容一出元素框时该做什么</li></ul></blockquote><ul><li>属性值<table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>visible</td><td>默认值，内容溢出，会呈现在元素框之外</td></tr><tr><td>hidden</td><td>内容溢出，则溢出内容不可见</td></tr><tr><td>scroll</td><td>不管内容是否溢出，都会显示滚动条</td></tr><tr><td>auto</td><td>内容溢出，则显示滚动条以便查看其余内容；若不溢出，则不显示滚动条</td></tr><tr><td>inherit</td><td>规定应该从父元素继承<code>overflow</code>属性的值</td></tr></tbody></table></li><li>overflow-x和overflow-y<blockquote><ul><li>overflow-x:水平方向溢出设置</li><li>overflow-y:垂直方向溢出设置</li><li>注意：是里面的盒子宽&#x2F;高比外面大，才是出效果，overflow要设置在外面盒子的样式中</li></ul></blockquote></li></ul><h4 id="4-vertical-align属性"><a href="#4-vertical-align属性" class="headerlink" title="4.vertical-align属性"></a>4.vertical-align属性</h4><blockquote><ul><li>指定<strong>行内元素、行内块元素、表格单元格元素</strong>的&#x3D;&#x3D;垂直&#x3D;&#x3D;对齐方式</li><li>对<strong>块级元素</strong>是无效的<table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>baseline</td><td>使元素的基线与父元素的<strong>基线</strong>对齐</td></tr><tr><td>sub</td><td>使元素的基线与父元素的<strong>下标基线</strong>对齐</td></tr><tr><td>super</td><td>使元素的基线与父元素的<strong>上标基线</strong>对齐</td></tr><tr><td>text-top</td><td>使元素的<strong>顶部</strong>与父元素的<strong>字体顶部</strong>对齐</td></tr><tr><td>text-bottom</td><td>使元素的<strong>底部</strong>与父元素的<strong>字体底部</strong>对齐</td></tr><tr><td>middle</td><td>使元素的中部与父元素的基线加上父元素x-height(x高度)的一半对齐</td></tr><tr><td>数值(px)</td><td>使元素的基线对齐到与父元素的基线之上的给定长度，可以是负数</td></tr><tr><td>百分比</td><td>使元素的基线对齐到父元素的基线至上的给定百分比，该百分比是<code>line-height</code>属性的百分比，可以是负数</td></tr><tr><td>top</td><td>使元素及其后代元素的顶部与整行的顶部对齐</td></tr><tr><td>bottom</td><td>使元素及其后代元素的底部与整行的底部对齐</td></tr></tbody></table></li></ul></blockquote><blockquote><ul><li>小写字母x的下边缘线就是我们的基线</li><li>无论内容中有无x，都是以x下边缘为基线<img src="baseline.png"></li></ul></blockquote><ul><li><p>应用场景</p><blockquote><ul><li>用于控制文字与行内块元素或图片在垂直方向上的对齐方式</li><li>用于设置表格单元中内容的垂直对齐方式</li></ul></blockquote></li><li><p>区别</p><blockquote><ol><li>行文本&#x3D;&#x3D;垂直&#x3D;&#x3D;居中<br><code>line-height:盒子高度</code></li></ol><ul><li>对行内块元素无效</li></ul><ol start="2"><li>text-align属性</li></ol><ul><li>定义**行内内容(例如文字、图片、行内块元素)**相对于他的父元素的&#x3D;&#x3D;水平&#x3D;&#x3D;对齐方式</li></ul><ol start="3"><li>vertical-align属性</li></ol><ul><li>指定**行内元素、行内块元素、表格单元格元素的&#x3D;&#x3D;垂直&#x3D;&#x3D;对齐方式</li><li>对于块级元素无效</li></ul></blockquote></li></ul><h4 id="5-案例"><a href="#5-案例" class="headerlink" title="5.案例"></a>5.案例</h4><ol><li>常用的a标签布局按钮</li><li>水平居中的轮播图按钮</li><li>常见的产品展示效果-水壶</li><li>常见的分页导航</li><li>小米官网左侧菜单<blockquote><ul><li><code>:hover</code>：鼠标放上去之后变样式</li></ul></blockquote></li><li>精美的Tab选项卡菜单<blockquote><ul><li>圆角</li><li>我的疑问？怎么合并精灵图</li></ul></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础认知和选择器</title>
      <link href="/2023/11/23/CSS%E5%9F%BA%E7%A1%80%E8%AE%A4%E7%9F%A5%E5%92%8C%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>/2023/11/23/CSS%E5%9F%BA%E7%A1%80%E8%AE%A4%E7%9F%A5%E5%92%8C%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="CSS基础认知"><a href="#CSS基础认知" class="headerlink" title="CSS基础认知"></a>CSS基础认知</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li>CSS又称层叠样式表，它是一种标记语言<del>编程语言</del></li><li>作用：给html标签添加样式</li><li>CSS已经发展到CSS3，在最新版本3.0中，增加了大量功能，以前只能用JS才能实现的现在用CSS3也能做到<blockquote><p>要清楚CSS3新增了哪些功能，与之前版本的不同在哪</p></blockquote></li></ul><blockquote><p>web前端三大核心基础：</p><table><thead><tr><th>分层</th><th>语言</th><th>功能</th><th>描述</th></tr></thead><tbody><tr><td>结构层</td><td>HTML</td><td>搭建结构、放置部件、描述语义</td><td>骨骼</td></tr><tr><td>样式层</td><td>CSS</td><td>美化页面，实现布局</td><td>皮肤</td></tr><tr><td>行为层</td><td>JavaScript</td><td>实现交互效果，数据收发、表单验证等</td><td>神经</td></tr></tbody></table></blockquote><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><h4 id="1-CSS规则集：选择器-声明块"><a href="#1-CSS规则集：选择器-声明块" class="headerlink" title="1.CSS规则集：选择器+声明块"></a>1.CSS规则集：选择器+声明块</h4><ul><li>选择器是指需要改变样式的html元素</li><li>声明块用<code>&#123;&#125;</code>包裹，里面有多条声明，每条声明块之间用<code>;</code>间隔</li><li>每条声明包含一个属性名称和一个值，以冒号分隔<blockquote><p>最后一条声明可以不写<code>;</code>，但为了统一标准，建议书写完整</p></blockquote></li></ul><h4 id="2-CSS样式的书写方式"><a href="#2-CSS样式的书写方式" class="headerlink" title="2. CSS样式的书写方式"></a>2. CSS样式的书写方式</h4><ul><li><strong>方式一</strong>：每一行一条声明，选择器与声明之间一个空格，冒号后面一个空格</li></ul><pre><code>p &#123;    color: red;    font-size: 20px;&#125;</code></pre><blockquote><p>开发中使用方式一，方便阅读和修改</p></blockquote><ul><li><strong>方式二</strong>：选择器和声明写在一行</li></ul><pre><code>p &#123;color: red;font-size: 20px;&#125;</code></pre><blockquote><p>项目上线时，会把CSS样式进行压缩，压缩后就是方式二的写法</p></blockquote><h4 id="3-CSS注释"><a href="#3-CSS注释" class="headerlink" title="3. CSS注释"></a>3. CSS注释</h4><ul><li>注释方式：<code>/* 注释 */</code></li><li>位置：只能放置在style里</li><li>快捷键：<code>ctrl+/</code><blockquote><p>与html注释的区别：</p><blockquote><p>写法：<code>&lt;!-- 注释--&gt;</code><br>能放置在html的任何位置</p></blockquote></blockquote></li></ul><h4 id="4-CSS的书写位置"><a href="#4-CSS的书写位置" class="headerlink" title="4. CSS的书写位置"></a>4. CSS的书写位置</h4><ul><li><strong>方式一</strong>：行内样式<ul><li>在标签中加入style属性</li></ul></li></ul><pre><code>&lt;h2 style=&quot;color: red&gt;行内样式&lt;/h2&gt;</code></pre><ul><li><strong>方式二</strong>：内嵌样式&#x2F;内部样式<ul><li>在<code>&lt;head&gt;&lt;/head&gt;</code>标签对中写style属性</li><li>在HTML5中，type可以不写</li></ul></li></ul><pre><code>&lt;head&gt;省略html框架&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;h1 &#123;color: bule;font-size: 20px&#125;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;标题&lt;/body&gt;</code></pre><ul><li><strong>方式三</strong>：外链样式&#x2F;外部样式<ul><li>新建一个<code>.css</code>文件，使用link标签引入到界面中</li><li>link标签要写在head中</li><li>优点：多个网页可以共用一个CSS样式文件</li></ul></li></ul><pre><code>&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;文件路径&quot;/&gt;&lt;/head&gt;</code></pre><blockquote><p>&#96;rel&#x3D;”stylesheet可以不写”</p></blockquote><ul><li><strong>方式四</strong>：导入式样式<ul><li>导入<code>.css</code>的文件</li><li>缺点：使用导入式的样式表，页面加载完成后才会加载样式；所以在CSS文件加载完成之前，网页就会呈现没有CSS样式的裸奔现象</li></ul></li></ul><pre><code>&lt;style&gt;    @import url(文件路径)&lt;/style&gt;</code></pre><blockquote><p>实际开发中很少用到</p></blockquote><h4 id="5-CSS样式的优先级"><a href="#5-CSS样式的优先级" class="headerlink" title="5. CSS样式的优先级"></a>5. CSS样式的优先级</h4><ul><li>&#x3D;&#x3D;行内样式&#x3D;&#x3D;的优先级最高</li><li>内联样式和外部样式优先级相同，按照&#x3D;&#x3D;就近原则&#x3D;&#x3D;渲染：渲染离标签更近的</li></ul><h3 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h3><h4 id="1-选择器分类"><a href="#1-选择器分类" class="headerlink" title="1.选择器分类"></a>1.选择器分类</h4><ul><li>传统&#x3D;&#x3D;CSS2.1&#x3D;&#x3D;选择器<blockquote><ul><li><a href="#2.%E6%A0%87%E7%AD%BE%E9%80%89%E6%8B%A9%E5%99%A8-bq-id">标签选择器</a></li><li><a href="#3.id%E9%80%89%E6%8B%A9%E5%99%A8-id-id">id选择器</a></li><li><a href="#4.class%E9%80%89%E6%8B%A9%E5%99%A8-class-id">class（类）选择器</a></li><li><a href="#5.%E9%80%9A%E9%85%8D%E7%AC%A6%E9%80%89%E6%8B%A9%E5%99%A8-tpf-id">通配符选择器</a></li><li><a href="#5.%E5%A4%8D%E5%90%88%E9%80%89%E6%8B%A9%E5%99%A8-fh-id">复合选择器</a></li><li><a href="#7.%E4%BC%AA%E7%B1%BB-wl-id">伪类</a></li></ul></blockquote></li><li>&#x3D;&#x3D;CSS3&#x3D;&#x3D;新增选择器<blockquote><ul><li><a href="#ys">8.元素关系选择器</a></li><li><a href="#xh">9.序号选择器</a></li><li><a href="sx">10.属性选择器</a></li><li><a href="#xz">11.CSS3新增伪类</a></li><li><a href="#wys">12.伪元素</a></li></ul></blockquote></li></ul><h4 id="2-标签选择器-bq-id"><a href="#2-标签选择器-bq-id" class="headerlink" title="2.标签选择器 {bq-id}"></a>2.标签选择器 {bq-id}</h4><blockquote><ul><li>又称元素选择器&#x2F;类型选择器</li><li>直接使用&#x3D;&#x3D;元素的标签名&#x3D;&#x3D;当做选择器，将选择页面上的&#x3D;&#x3D;所有<strong>该种标签</strong>&#x3D;&#x3D;，无论位置深浅</li><li>作用：由于覆盖面非常大，所以适用于标签样式的初始化</li></ul><pre class=" language-css"><code class="language-css">ul&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">list-style</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>a &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>  <span class="token property">text-decoration</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre></blockquote><h4 id="3-id选择器-id-id"><a href="#3-id选择器-id-id" class="headerlink" title="3.id选择器 {id-id}"></a>3.id选择器 {id-id}</h4><blockquote><ul><li>id选择器是使用元素的id属性来选择特定元素</li><li>写法：<code>#+id名</code></li><li>作用:元素的id是唯一的，所以用于选择一个唯一的元素</li><li>id的正确命名规范：<ul><li>只能由字母、数字、下划线<code>_</code>、短横线<code>-</code>构成</li><li>不能以数字开头</li><li>区分大小写</li><li>最好多个单词之间以<code>-</code>分割</li></ul></li></ul><pre class=" language-css"><code class="language-css">&lt;style>    #box<span class="token number">1</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span>orange<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&lt;/style>&lt;body>    &lt;h<span class="token number">3</span> id=<span class="token string">"box1"</span>>三级标题&lt;/h<span class="token number">3</span>>&lt;/body></code></pre></blockquote><h4 id="4-class选择器-class-id"><a href="#4-class选择器-class-id" class="headerlink" title="4.class选择器 {class-id}"></a>4.class选择器 {class-id}</h4><blockquote><ul><li>class属性表示”类名”</li><li>类名的命名规范与id相同</li><li>写法：<code>.+class名</code><ul><li>多个标签可以使用相同的类名</li><li>同一个标签可以属于多个类，类名之间用空格隔开</li></ul></li><li>作用：原子类<ul><li>应用场景：组件化开发</li><li>在网页项目前，可以将所有的常用字号、文字、颜色、行高、外边距、内边距等设置为单独的类</li><li>HTML标签就可以”按需选择”它的类名，以快速添加样式</li></ul></li></ul></blockquote><h4 id="5-通配符选择器-tpf-id"><a href="#5-通配符选择器-tpf-id" class="headerlink" title="5.通配符选择器 {tpf-id}"></a>5.通配符选择器 {tpf-id}</h4><blockquote><ul><li>可以作用于页面当中的所有元素</li><li>写法：<code>*</code></li></ul><pre class=" language-css"><code class="language-css">* &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre></blockquote><h4 id="基础选择器的优先级"><a href="#基础选择器的优先级" class="headerlink" title="基础选择器的优先级"></a>基础选择器的优先级</h4><blockquote><p><strong>id选择器</strong> &gt; <strong>class选择器</strong> &gt; <strong>标签选择器</strong> &gt; <strong>通配符选择器</strong></p></blockquote><h4 id="6-复合选择器-fh-id"><a href="#6-复合选择器-fh-id" class="headerlink" title="6.复合选择器 {fh-id}"></a>6.复合选择器 {fh-id}</h4><blockquote><table><thead><tr><th>名称</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>后代选择器</td><td><code>.box .para</code></td><td>选择类名为box的标签 内部的类名为para的标签</td></tr><tr><td>交集选择器</td><td><code>li.para</code></td><td>选择既是li标签，也属于para类的标签</td></tr><tr><td>并集选择器</td><td><code>ul,ol</code></td><td>选择所有ul和ol标签</td></tr></tbody></table><ul><li>后代选择器<ul><li>在CSS中，使用&#x3D;&#x3D;空格&#x3D;&#x3D;表示<code>后代</code>，不一定是“儿子”</li><li>后代选择器可以有很多空格，表示隔开好几代</li><li>会同时选择满足条件的子和孙</li></ul></li></ul></blockquote><blockquote><ul><li>交集选择器<ul><li>没有空格</li><li>选择同时满足多个条件的标签</li></ul></li></ul></blockquote><blockquote><ul><li>并集选择器<ul><li>也叫做<code>分组选择器</code>，逗号表示分组</li><li>同时选择多个标签</li></ul></li></ul></blockquote><blockquote><ul><li>复合选择器：选择器可以任意搭配结合</li></ul></blockquote><h4 id="7-伪类-wl-id"><a href="#7-伪类-wl-id" class="headerlink" title="7.伪类 {wl-id}"></a>7.伪类 {wl-id}</h4><blockquote><ul><li>伪类是添加到选择器的描述性词语，指定要选择元素的特殊状态<blockquote><p>超链接拥有四个特殊状态</p><table><thead><tr><th>伪类</th><th>描述</th></tr></thead><tbody><tr><td><code>a:link</code></td><td>没有被访问的超级链接</td></tr><tr><td><code>a:visited</code></td><td>已经被访问过的超级链接</td></tr><tr><td><code>a:hover</code></td><td>正在被鼠标悬停的超级链接</td></tr><tr><td><code>a:active</code></td><td>正在被激活的超级链接(按下按键，但还没有松开按键)</td></tr><tr><td><strong>爱恨准则</strong></td><td></td></tr></tbody></table></blockquote></li><li>a标签的伪类书写，按照”爱恨准则”的顺序，否则会与伪类不生效</li><li>LOVE HATE:<code>:link</code>、<code>:visited</code>、<code>:hover</code>、<code>:active</code></li></ul><pre><code>&lt;style&gt;    /*      顺序不能乱 ，爱恨准则 LOVE HATE      :link  -&gt; :visited -&gt; :hover -&gt; :active    */    a:link &#123;      color:red;    &#125;    a:visited &#123;      color:blue;    &#125;    a:hover &#123;      color: green;    &#125;    a:active &#123;      color:yellow;    &#125;&lt;/style&gt;</code></pre><blockquote><p><strong>注</strong></p></blockquote><ul><li>遵守了爱恨准则，但<code>a:link</code>不生效，是因为之前访问过的网址会被浏览器记录，就会显示<code>a:visited</code>的样式(修改网址或清除浏览记录即可)</li><li>四个样式可以根据实际情况单独使用</li><li>伪类<code>:hover</code>不仅可以用在a标签上，还可以用在其他标签上</li></ul></blockquote><h4 id="8-元素关系选择器"><a href="#8-元素关系选择器" class="headerlink" title="8.元素关系选择器"></a><h4 id="ys">8.元素关系选择器</h4></h4><blockquote><ul><li>子选择器<ul><li><code>.bov&gt;p &#123; &#125;</code></li><li>两个标签要为父子关系，当使用<code>&gt;</code>符号分割两个元素时，他只会匹配那些作为第一个元素的直接后代元素</li><li>从IE7开始兼容</li></ul></li></ul></blockquote><blockquote><ul><li>相邻兄弟选择器<ul><li><code>.bov+p&#123; &#125;</code></li><li>第二个元素紧跟在第一个元素之后，并且这两个元素都属于同一个父元素的子元素</li><li>只会选择紧跟着的一个，就算有两个相同元素在第一个元素后面</li><li>a+b即选择紧跟在a后面的第一个b</li><li>从IE7开始兼容</li></ul></li></ul></blockquote><blockquote><ul><li>通用兄弟选择器<ul><li><code>.box~p&#123; &#125;</code></li><li><code>a~b</code>表示选择a元素&#x3D;&#x3D;之后&#x3D;&#x3D;所有的同级b元素</li><li>a之前的b元素是选择不到的</li><li>从IE7开始兼容</li></ul></li></ul></blockquote><h4 id="9-序号选择器"><a href="#9-序号选择器" class="headerlink" title="9.序号选择器"></a><h4 id="xh">9.序号选择器</h4></h4><blockquote><table><thead><tr><th>选择器</th><th>描述</th><th>兼容性</th></tr></thead><tbody><tr><td><code>:first-child</code></td><td>第一个子元素</td><td>IE7</td></tr><tr><td><code>:last-child</code></td><td>最后一个子元素</td><td>IE9</td></tr><tr><td><code>:nth-child(n)</code></td><td>第n个子元素</td><td>IE9</td></tr><tr><td><code>:nth-last-child(n)</code></td><td>倒数第n个子元素</td><td>IE9</td></tr><tr><td><code>:nth-of-type(n)</code></td><td>第n个某类型子元素</td><td>IE9</td></tr><tr><td><code>:nth-last-of-type(n)</code></td><td>倒数第n个某类型子元素</td><td>IE9</td></tr><tr><td><code>:only-child</code></td><td>选择没有任何兄弟元素的元素</td><td></td></tr><tr><td>注：</td><td></td><td></td></tr></tbody></table><ul><li>动态值写法：()可以写成<code>an+b</code>的形式也可以用关键词，<ul><li>n是自然数，从0开始计算</li><li>a,b必须是整数，可正可负</li><li>2n&#x3D;偶数&#x3D;even,2n+1&#x3D;奇数&#x3D;odds，</li></ul></li><li><code>nth-of-type(n)</code>和<code>nth-last-of-type(n)</code>键选择&#x3D;&#x3D;同种标签&#x3D;&#x3D;指定序号的子元素</li></ul></blockquote><h4 id="10-属性选择器"><a href="#10-属性选择器" class="headerlink" title="10.属性选择器"></a><h4 id="sx">10.属性选择器</h4></h4><blockquote><ul><li>写法：<code>标签[属性]</code><table><thead><tr><th>案例</th><th>描述</th><th>兼容性</th></tr></thead><tbody><tr><td><code>img[alt]</code></td><td>选择有alt属性的img标签</td><td>IE9</td></tr><tr><td><code>img[alt=&quot;icon&quot;]</code></td><td>选择alt属性是icon的img标签,属性里只能有icon这几个词</td><td>IE9</td></tr><tr><td><code>img[alt^=&quot;icon&quot;]</code></td><td>选择alt属性以icon开头的img标签,只有icon或者是以它开头都行</td><td>IE9</td></tr><tr><td><code>img[alt$=&quot;icon&quot;]</code></td><td>选择alt属性以icon结尾的img标签,只有icon或者以icon结尾的都行</td><td>IE9</td></tr><tr><td><code>img[alt*=&quot;icon&quot;]</code></td><td>选择alt属性中包含icon文字的img标签，sscion&#x2F;icon-c&#x2F;icon button都可以</td><td>IE9</td></tr><tr><td><code>img[alt~=&quot;icon&quot;]</code></td><td>选择alt属性中<strong>有空格隔开</strong>的icon字样的的img标签,只有icon属性&#x2F;有包含icon在内的多个属性值</td><td>IE9</td></tr><tr><td>&#96;img[alt</td><td>&#x3D;”icon”]&#96;</td><td>选择alt属性以<code>icon-</code>开头的img标签,只有icon属性&#x2F;以icon-开头的属性都行</td></tr></tbody></table></li><li>以上标签、属性、文字都可以替换</li><li>注：实际开发中用的很少，只做了解即可</li></ul></blockquote><h4 id="11-CSS3新增伪类"><a href="#11-CSS3新增伪类" class="headerlink" title="11.CSS3新增伪类"></a><h4 id="xz">11.CSS3新增伪类</h4></h4><blockquote><table><thead><tr><th>伪类</th><th>描述</th></tr></thead><tbody><tr><td><code>:focus</code></td><td>选择当前获得焦点的表单元素</td></tr><tr><td><code>:checked</code></td><td>选择当前已经勾选的单选按钮或复选框</td></tr><tr><td><code>:empty</code></td><td>选择空标签</td></tr><tr><td><code>:enabled</code></td><td>选择当前有效的表单元素</td></tr><tr><td><code>:disabled</code></td><td>选择当前无效的表单元素</td></tr><tr><td><code>:root</code></td><td>选择根元素，即<code>&lt;html&gt;</code>标签</td></tr></tbody></table><blockquote><p><code>:focus</code>：</p></blockquote><ul><li>可修改当前获得焦点的表单元素样式</li><li>自带outline样式<blockquote><p><code>:checked</code></p></blockquote></li><li>可以用来修改复选框&#x2F;单选框样式(原样式优先级太高，用div模拟复选框&#x2F;单选框)，区别：单选框选中后不能取消</li><li>用label标签绑定复选框<code>input:checkbox</code>(&#x2F;单选框<code>input:radio</code>)、div.box、以及div下的div.item</li><li>设置新选择框.box的样式、.item:被选中后的样式</li><li>用<code>display:none</code>隐藏原选择框和.item</li><li><code>input:checked+ .box .item &#123;dispaly:block&#125;</code>表示被选中后，.box下的.item显示出来<blockquote><p><code>:empty</code>:只能是空内容，有空格的标签不会被选中</p></blockquote></li></ul></blockquote><h4 id="12-CSS3新增伪元素"><a href="#12-CSS3新增伪元素" class="headerlink" title="12.CSS3新增伪元素"></a><h4 id="wys">12.CSS3新增伪元素</h4></h4><blockquote><ul><li>CSS3新增了”伪元素”特性，表示”虚拟动态创建的元素”</li><li>伪元素用双冒号<code>::</code>表示，IE8及以上兼容单冒号<code>:</code></li><li>语法：<code>element::before&#123; &#125;</code><table><thead><tr><th>CSS3新增伪元素</th><th>描述</th></tr></thead><tbody><tr><td><code>::before</code></td><td>匹配选中的元素的第一个元素</td></tr><tr><td><code>::after</code></td><td>匹配选中元素的最后一个子元素</td></tr><tr><td><code>::selection</code></td><td>选择器匹配被用户选取的部分</td></tr><tr><td><code>::first-letter</code></td><td>会选中某元素中的第一行的第一个字母</td></tr><tr><td><code>::first-line</code></td><td>会选中某元素第一行的全部文字</td></tr><tr><td><code>::placeholder</code></td><td>自定义表单元素的占位文本样式</td></tr></tbody></table></li></ul></blockquote><blockquote><blockquote><p><code>::before</code>和<code>::after</code></p></blockquote><ul><li>企业应用：各种小图标、CSS精灵图</li><li>这两个伪元素必须使用<code>content</code>属性表示其内容，绝对不能省掉</li><li>为选中的元素添加修饰性的内容，此元素默认为行内元素<ul><li>第一种情况：给子元素&#x2F;没有子元素的盒子加，就是给对应标签的前&#x2F;后新增content内容及样式</li></ul></li></ul><pre><code>&lt;div&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;</code></pre></blockquote><!-- 给这种情况加伪元素就算新增内容 --><blockquote><pre><code>  - 第二种情况：给父元素加，就会新增一个行内元素及样式</code></pre><div><p></p></div></blockquote><!-- >这种情况就是新增行内元素 --><blockquote><pre><code>&lt;img src=&quot;weiyuansu.png&quot;&gt;</code></pre></blockquote><blockquote><blockquote><p><code>::selection</code></p></blockquote><ul><li>被选中的部分会改变样式</li><li>只能向<code>::selection</code>选择器应用少量的CSS属性:color、background、cursor以及outline<blockquote><p><code>::first-letter</code></p></blockquote></li><li>会选中某元素的第一行的第一个字母</li><li>必须是块级元素<blockquote><p><code>::first-line1</code></p></blockquote></li><li>会选中某元素的第一行的全部文字</li><li>必须是块级元素</li></ul></blockquote><blockquote><ul><li>在选择器中，空格<code> </code>表示后代，冒号前面的标签表示只能在该标签下选择<br><code>.box p:first-child &#123;color:red;&#125;</code><br>表示在.box里面，第一个p标签字体为红色</li></ul></blockquote><blockquote><h4 id="12-作业"><a href="#12-作业" class="headerlink" title="12.作业"></a>12.作业</h4><ol><li>开关按钮</li></ol><ul><li><code>input:checked</code>里面可以直接写按下开关后的样式</li><li>优化：用伪元素替代没有内容的标签</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML及vscode</title>
      <link href="/2023/11/19/HTML%E5%8F%8Avscode/"/>
      <url>/2023/11/19/HTML%E5%8F%8Avscode/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><div class="markmap-container" style="height:400px">  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;HTML&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;定义&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;描述网页的语言 / 超文本标记语言&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;超出文本的限制：可使用img/audio/vedio等&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;超链接文本：实现文件间的跳转&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;html骨架&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;文档声明：!DOCTYPE&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;告诉浏览器的解析器，用什么规范来解析页面&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;语言类型：lang=&amp;quot;en&amp;quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;声明语言类型&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;网页配置：head&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[22,23]},&quot;v&quot;:&quot;网页标题：title&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[24,25]},&quot;v&quot;:&quot;meta：元标签&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[26,27]},&quot;v&quot;:&quot;声明网页字符编码集：charset&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[28,29]},&quot;v&quot;:&quot;UTF-8：全球语言&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[30,31]},&quot;v&quot;:&quot;gbk：汉语、英语、少量日韩&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;ASCII：英语&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[36,37]},&quot;v&quot;:&quot;IE8及以上版本使用当前版本的最高级标准模式去渲染网页&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[38,39]},&quot;v&quot;:&quot;name&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[40,41]},&quot;v&quot;:&quot;移动端适配：viewport&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[42,43]},&quot;v&quot;:&quot;宽度为设备实际宽度：width=device-width&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:11,&quot;p&quot;:{&quot;lines&quot;:[44,45]},&quot;v&quot;:&quot;不需要缩放：initial-scale=1.0&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[46,47]},&quot;v&quot;:&quot;网页关键词：key&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:9,&quot;p&quot;:{&quot;lines&quot;:[48,49]},&quot;v&quot;:&quot;网页描述：description&quot;}]}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[50,51]},&quot;v&quot;:&quot;网页内容：body&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[52,53]},&quot;v&quot;:&quot;HTML5优点/新特性&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[54,55]},&quot;v&quot;:&quot;形成了HTML5标准的文档声明，不再基于SGML&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[56,57]},&quot;v&quot;:&quot;新增了语义化标签&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[58,59]},&quot;v&quot;:&quot;支持多媒体：audio、vedio&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[60,61]},&quot;v&quot;:&quot;画布canvas可以绘制各种形状&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[62,63]},&quot;v&quot;:&quot;可以使用SOL数据库、支持存储离线数据：sessionStorage、localStorage&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[64,65]},&quot;v&quot;:&quot;新的文档属性：document.visibilityState&quot;},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[66,67]},&quot;v&quot;:&quot;支持定位、拖动和放置&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[68,69]},&quot;v&quot;:&quot;语义化&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[70,71]},&quot;v&quot;:&quot;概念&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[72,73]},&quot;v&quot;:&quot;使用有英文语义的标签&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[74,75]},&quot;v&quot;:&quot;作用/原因&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[76,77]},&quot;v&quot;:&quot;在没有样式的情况下，也能够看得懂网页框架&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[78,79]},&quot;v&quot;:&quot;爬虫依赖标签来确定上下文和关键词的权重，语义化有利于SEO优化&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[80,81]},&quot;v&quot;:&quot;国际化，各国开发者都能看得懂&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[82,83]},&quot;v&quot;:&quot;提供可维护性，减少差异&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[84,85]},&quot;v&quot;:&quot;有利于帮助辅助技术更好地转义网页，例如无障碍阅读&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[86,87]},&quot;v&quot;:&quot;html标签&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[88,89]},&quot;v&quot;:&quot;块级元素&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[90,91]},&quot;v&quot;:&quot;标题：h1~h6&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[92,93]},&quot;v&quot;:&quot;段落p&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[94,95]},&quot;v&quot;:&quot;div&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[96,97]},&quot;v&quot;:&quot;列表标签ul~li，ol~li&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[98,99]},&quot;v&quot;:&quot;定义列表dl dt dd&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[100,101]},&quot;v&quot;:&quot;表单form&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[102,103]},&quot;v&quot;:&quot;action属性：规定向何处发送数据&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[104,105]},&quot;v&quot;:&quot;methods属性：规定发送数据的HTTP方法&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[106,107]},&quot;v&quot;:&quot;行内块元素&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[108,109]},&quot;v&quot;:&quot;img&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[110,111]},&quot;v&quot;:&quot;gif：动画、布尔透明、无兼容问题&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[112,113]},&quot;v&quot;:&quot;jpg：失真压缩法，色彩丰富&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[114,115]},&quot;v&quot;:&quot;png：支持透明，高保真&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[116,117]},&quot;v&quot;:&quot;webp：文件小，动画，透明，兼容性相对不好&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[118,119]},&quot;v&quot;:&quot;svg：矢量图，体积小，动画&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[120,121]},&quot;v&quot;:&quot;audio&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[122,123]},&quot;v&quot;:&quot;vedio&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[124,125]},&quot;v&quot;:&quot;input(不同的type属性有不同作用)&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[126,127]},&quot;v&quot;:&quot;text：单行文本&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[128,129]},&quot;v&quot;:&quot;radio：单选框&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[130,131]},&quot;v&quot;:&quot;checkbox：多选框&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[132,133]},&quot;v&quot;:&quot;button：按钮&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[134,135]},&quot;v&quot;:&quot;submit：提交&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[136,137]},&quot;v&quot;:&quot;password：密码&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[138,139]},&quot;v&quot;:&quot;reset：重置&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[140,141]},&quot;v&quot;:&quot;select&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[142,143]},&quot;v&quot;:&quot;option&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[144,145]},&quot;v&quot;:&quot;textarea&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[146,147]},&quot;v&quot;:&quot;行内元素&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[148,149]},&quot;v&quot;:&quot;a标签&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[150,151]},&quot;v&quot;:&quot;span&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[152,153]},&quot;v&quot;:&quot;label&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[154,155]},&quot;v&quot;:&quot;空白折叠现象&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[156,157]},&quot;v&quot;:&quot;多个换行或多个空格会被解析成一个空格&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[158,159]},&quot;v&quot;:&quot;转义符&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[160,161]},&quot;v&quot;:&quot;空格：&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[162,163]},&quot;v&quot;:&quot;&amp;amp;：&amp;amp;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[164,165]},&quot;v&quot;:&quot;版权符：©&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[166,167]},&quot;v&quot;:&quot;商标：®&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[168,169]},&quot;v&quot;:&quot;&amp;lt;：&amp;lt;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[170,171]},&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;paragraph&quot;,&quot;d&quot;:7,&quot;p&quot;:{&quot;lines&quot;:[170,171]},&quot;v&quot;:&quot;：&amp;gt;&quot;}]}]}]}]}"></svg></div><h2 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h2><h3 id="1、HTML是什么"><a href="#1、HTML是什么" class="headerlink" title="1、HTML是什么"></a>1、HTML是什么</h3><ul><li>HTML是用来描述网页的语言，又称“超文本标记语言”<blockquote><p>超文本有两层含义</p><ul><li>超出了文本的限制：他可以加入图片、视频、音频、链接等</li><li>超级链接文本：可以从一个文件跳转到另一个文件，与世界各地主机的文件相连</li></ul></blockquote></li></ul><h3 id="2、HTML骨架"><a href="#2、HTML骨架" class="headerlink" title="2、HTML骨架"></a>2、HTML骨架</h3><h4 id="文档声明DTD："><a href="#文档声明DTD：" class="headerlink" title="文档声明DTD："></a>文档声明DTD：</h4><pre><code>&lt;!DOCTYPE html&gt;</code></pre><blockquote><p>它并不是HTML标签，文档声明以下的都是HTML标签<br>作用：告诉浏览器的解析器使用HTML5的标准模式<br>HTML 4.01有三种声明：严格版、过渡版、框架版</p></blockquote><h4 id="声明语言类型"><a href="#声明语言类型" class="headerlink" title="声明语言类型"></a>声明语言类型</h4><pre><code>&lt;html lang=&quot;en&quot;&gt;</code></pre><blockquote><p>en：英语，zh：中文；网站有多国语言时修改</p></blockquote><h4 id="head标签"><a href="#head标签" class="headerlink" title="head标签"></a>head标签</h4><pre><code>&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0&quot;&gt;    &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;</code></pre><blockquote><p>head标签里面是对网页的配置</p></blockquote><h4 id="声明网页字符编码集"><a href="#声明网页字符编码集" class="headerlink" title="声明网页字符编码集"></a>声明网页字符编码集</h4><pre><code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code></pre><blockquote><p>meta是元标签，charset是字符集<br>在中国字符集有两种类型：”UTF-8”和”gb2312”</p></blockquote><table><thead><tr><th>字符集</th><th>涵盖字符</th><th>1个汉字的字节数</th><th>适用场景</th></tr></thead><tbody><tr><td>UTF-8</td><td>涵盖全球所有国家、民族的文字和大量图形字符</td><td>3</td><td>非汉字文字的网页</td></tr><tr><td>gb2312(gbk)</td><td>收录所有汉字字符、英语，少量韩文、日文、少量图形字符</td><td>2</td><td>只有汉语和英语的网页</td></tr><tr><td>ASCII</td><td>只有英文</td><td></td><td></td></tr><tr><td>ISO-8859-1</td><td>西欧字符</td><td></td><td></td></tr><tr><td>Unicode</td><td>世界通用</td><td></td><td>它只是符号集，并不是编码方式；具体编码方式包括UTF-8、UTF-16、UTF-32</td></tr></tbody></table><blockquote><p>由上表可以看出，gbk更加节省字节，有利于SEO优化<br>注意：VScode的设置要与此处一致，否则会乱码。且live serve插件不支持gbk</p></blockquote><h4 id="IE8及以上版本都使用当前版本所对应的最高级标准模式去渲染"><a href="#IE8及以上版本都使用当前版本所对应的最高级标准模式去渲染" class="headerlink" title="IE8及以上版本都使用当前版本所对应的最高级标准模式去渲染"></a>IE8及以上版本都使用当前版本所对应的最高级标准模式去渲染</h4><pre><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</code></pre><blockquote><p><code>X-UA-Compatible</code> 是IE8的专有meta属性，他告诉IE8采用何种IE版本去渲染网页<br>最佳兼容模式方案：</p></blockquote><pre><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;/&gt;</code></pre><blockquote><p><code>chrome=1</code>表示将允许站点在使用了谷歌浏览器内嵌框架的客户端渲染</p></blockquote><h4 id="移动端适配"><a href="#移动端适配" class="headerlink" title="移动端适配"></a>移动端适配</h4><ul><li>宽度为设备实际宽度，不需要缩放</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width,initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><ul><li>keywords</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>关键词内容<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><ul><li>description</li></ul><pre><code>&lt;meta name=&quot;description&quot; content=&quot;描述的内容&quot;/&gt;</code></pre><h4 id="网页标题"><a href="#网页标题" class="headerlink" title="网页标题"></a>网页标题</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></code></pre><h4 id="body标签"><a href="#body标签" class="headerlink" title="body标签"></a>body标签</h4><blockquote><p>里面包括网页的头部、主要内容、页脚各个部分</p></blockquote><h3 id="3、浏览器内核"><a href="#3、浏览器内核" class="headerlink" title="3、浏览器内核"></a>3、浏览器内核</h3><table><thead><tr><th>浏览器</th><th>内核</th></tr></thead><tbody><tr><td>IE、世界之窗浏览器</td><td>Trident</td></tr><tr><td>Edge</td><td>WebKit</td></tr><tr><td>chrome&#x2F;opera</td><td>Blink</td></tr><tr><td>Firefox（火狐）</td><td>Gecko</td></tr><tr><td>Safari（苹果）</td><td>webkit</td></tr><tr><td>360、猎豹、2345浏览器</td><td>trident+blink</td></tr><tr><td>UC、搜狗、遨游、QQ浏览器</td><td>trident+webkit</td></tr></tbody></table><h2 id="二、HTML标签及属性"><a href="#二、HTML标签及属性" class="headerlink" title="二、HTML标签及属性"></a>二、HTML标签及属性</h2><h3 id="1、标题标签"><a href="#1、标题标签" class="headerlink" title="1、标题标签"></a>1、标题标签</h3><p>h1~h6</p><table><thead><tr><th>html写法</th><th>markdown写法</th></tr></thead><tbody><tr><td><h1>一级标题</h1></td><td># H1</td></tr><tr><td><h2>二级标题</h2></td><td>## H2</td></tr><tr><td><h3>三级标题</h3></td><td>### H3</td></tr><tr><td><h4>四级标题</h4></td><td>#### H4</td></tr><tr><td><h5>五级标题</h5></td><td>##### H5</td></tr><tr><td><h6>六级标题</h6></td><td>###### H6</td></tr></tbody></table><h3 id="2、段落标签"><a href="#2、段落标签" class="headerlink" title="2、段落标签"></a>2、段落标签</h3><pre><code>&lt;p&gt;段落&lt;/p&gt;</code></pre><h3 id="3、HTML5特性"><a href="#3、HTML5特性" class="headerlink" title="3、HTML5特性"></a>3、HTML5特性</h3><h4 id="空白折叠现象：多个换行和多个空格都会被折叠成一个空格"><a href="#空白折叠现象：多个换行和多个空格都会被折叠成一个空格" class="headerlink" title="空白折叠现象：多个换行和多个空格都会被折叠成一个空格"></a>空白折叠现象：多个换行和多个空格都会被折叠成一个空格</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>空白折叠现象<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>文字之间   的  多个空格会被折叠成一个空格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>多个空行会被省略<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    标签内壁和文字之间的空格会被忽略<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>效果展示：</p><h3>空白折叠现象</h3><h3>文字之间   的  多个空格会被折叠成一个空格</h3><h3>多个空行会被省略</h3><p>    标签内壁和文字之间的空格会被忽略</p><h4 id="常用转义符"><a href="#常用转义符" class="headerlink" title="常用转义符"></a>常用转义符</h4><pre class=" language-html"><code class="language-html">空格：<span class="token entity" title="&nbsp;">&amp;nbsp;</span>小于号：<span class="token entity" title="&lt;">&amp;lt;</span>大于号：<span class="token entity" title="&gt;">&amp;gt;</span>&amp;符号：<span class="token entity" title="&amp;">&amp;amp;</span>单引号：<span class="token entity" title="&quot;">&amp;quot;</span>版权符：<span class="token entity" title="&copy;">&amp;copy;</span>已注册商标：<span class="token entity" title="&reg;">&amp;reg;</span></code></pre><p>效果展示：<br>空格：&nbsp;<br>小于号：&lt;<br>大于号：&gt;<br>&amp;符号：&amp;<br>单引号：&quot;<br>版权符：&copy;<br>已注册商标：&reg;</p><blockquote><p>注：千万不要忘了分号;</p></blockquote><h3 id="4、列表标签"><a href="#4、列表标签" class="headerlink" title="4、列表标签"></a>4、列表标签</h3><h4 id="无序列表：ul-li"><a href="#无序列表：ul-li" class="headerlink" title="无序列表：ul li"></a>无序列表：ul li</h4><ul>    <li>ul、li是一对父子标签，必须同时存在</li>    <li>ul中只能嵌套li，但是li可以嵌套任何标签</li>    <li>type属性：</li>        <ul>            <li>旧版本使用type="square/circle/disc"</li>            <li>在html5中用CSS定义其type属性 style="list-style-type:cicle/square/disc"</li>        </ul>    </li></ul><ul type="disc">    <li>默认样式：实心圆disc</li></ul><ul style="list-style-type:circle">    <li>空心圆：circle</li></ul><ul style="list-style-type:square">    <li>实心正方形：square</li></ul><blockquote><p>markdown语法：</p><ul><li>实心圆：减号-+空格</li><li>空心圆：tab+减号-+一个空格</li></ul></blockquote><h4 id="有序列表-ol-li"><a href="#有序列表-ol-li" class="headerlink" title="有序列表 ol li"></a>有序列表 ol li</h4><ol>    <li>ol li也是父子标签，ol只能嵌套li，但li可以嵌套任何标签</li>    <li>有顺序的列表</li>    <li>type属性：type="1/A/a/I/i"</li>        <ol type="1">            <li>Java</li>            <li>C++</li>            <li>python</li>        </ol>    <li>start属性：指定起始值</li>        <ol type="I" start="3">            <li>Java</li>            <li>C++</li>            <li>python</li>        </ol>    <li>reversed属性：倒序，直接填写该单词</li>        <ol type="A" start="3" reversed >            <li>Java</li>            <li>C++</li>            <li>python</li>        </ol></ol><blockquote><p>markdown中直接输入数字+.+一个空格<br>根据上下顺序编号，而不是输入的数字</p></blockquote><pre><code>1. first5. second3. third </code></pre><p>效果：</p><ol><li>first</li><li>second</li><li>third</li></ol><h4 id="定义列表-dl-dt-dd"><a href="#定义列表-dl-dt-dd" class="headerlink" title="定义列表 dl dt dd"></a>定义列表 dl dt dd</h4><dl>    <dt>定义项1</dt>    <dd>解释说明1</dd>    <dd>解释说明2</dd>    <dt>定义项2</dt>    <dd>解释说明1</dd></dl><dl>    <dt>定义项3</dt>    <dd>解释说明1</dd></dt><blockquote><ul><li>dt dl可交替出现，也可以不交替出现(此时放在不同的dl中)</li><li>应用场景可参考小米官网底部</li><li>markdown语法：第一行术语，第二行冒号+一个空格+定义<br>定义项<br>: 解释说明</li></ul></blockquote><h3 id="5、多媒体标签"><a href="#5、多媒体标签" class="headerlink" title="5、多媒体标签"></a>5、多媒体标签</h3><h4 id="图片标签img"><a href="#图片标签img" class="headerlink" title="图片标签img"></a>图片标签img</h4><ul><li>正确写法：</li></ul><pre><code>&lt;img src=&quot; &quot; alt=&quot; &quot; width=&quot; &quot; height=&quot; &quot;/&gt;</code></pre><img src="3.avif"/><blockquote><p>pc端以上四要素必须填写<br>移动端必须填写alt属性，且需要表现出图片的含义</p></blockquote><ul><li>alt属性：图片的文本描述</li><li>width、height属性：图片宽度高度</li><li>src图片路径：<ul><li>相对路径：从当前网页出发，找到图片的路径。.&#x2F;是当前目录；..&#x2F;是返回上一级目录。</li><li>绝对路径：图片的精确地址</li></ul></li></ul><blockquote><p>markdown语法：<code>![alt](图片路径)</code></p></blockquote><h4 id="超级链接a标签"><a href="#超级链接a标签" class="headerlink" title="超级链接a标签"></a>超级链接a标签</h4><ul><li>正确写法：</li></ul><pre><code>&lt;a herf=&quot;链接&quot; title=&quot;悬停文本&quot; target=&quot;网页跳转方式&quot;&gt;网页显示&lt;/a&gt;</code></pre><p><a href="https://www.baidu.com" title="百度知道" target="_self">百度一下</a></p><blockquote><p>a标签是网页之间跳转的方式<br>href属性：支持相对属性和绝对属性<br>title属性：悬停文本<br>target属性：网页跳转的方式</p><ul><li>_blank&#x2F;blank:在新窗口打开网页</li></ul></blockquote><ul><li><p>_self:默认，当前页面跳转</p></li><li><p>_parent:在父窗口中打开</p></li><li><p>_top:在当前窗体打开链接，并替换当前的整个窗体</p><blockquote><ul><li>下面三个标签在网页上看效果一样，但在框架页中效果不同</li></ul></blockquote></li><li><p>点击图片跳转网页：</p><a href="https://www.baidu.com" title="手机"><img src="1.jpg"></a></li><li><p>页面锚点</p></li></ul><blockquote><p>给B处设置id，A处a标签链接为该id，点击A处则会跳转至B处</p></blockquote><pre><code>&lt;a href=&quot;#id名&quot;&gt;名称&lt;/a&gt;&lt;p id=&quot; &quot;&gt;名称&lt;/p&gt;</code></pre><p>效果：<br><a href="#yyhbq">语义化标签</a></p><blockquote><p>markdown语法：<br><a href="#A%E5%A4%84%E5%90%8D%E7%A7%B0-id%E5%90%8D-id">A处</a><br>B处 {id名-id}</p></blockquote><p><a href="#7%E3%80%81%E8%A1%A8%E6%A0%BC%E6%A0%87%E7%AD%BE-bg-id">表格标签</a></p><ul><li>下载链接<blockquote><p>支持exe、zip、rar、word、excel等格式的文件<br>链接为文件地址</p></blockquote></li></ul><p><a href="D:\arry\30天计划\配件\前端学习资料-超链接.docx">前端学习资料</a></p><ul><li><p>邮件链接</p><blockquote><p>链接为mailto:邮箱地址<br><a href="1234@qq.com">给我发邮件</a></p></blockquote></li><li><p>电话链接</p><blockquote><p>链接为tel:电话号码<br><a href="1234">给我打电话</a></p></blockquote></li></ul><h4 id="音频标签audio"><a href="#音频标签audio" class="headerlink" title="音频标签audio"></a>音频标签audio</h4><ul><li>正确写法1：</li></ul><pre><code>&lt;audio controls src=&quot;路径&quot; autoplay loop&gt;提示语&lt;/audio&gt;</code></pre><p><audio controls src="D:\arry\30天计划\配件\音标篇004.mp3" autoplay loop>抱歉，您的浏览器不支持audio标签，请升级您的浏览器哦</audio></p><ul><li><p>controls：显示播放空间</p></li><li><p>src：文件路径</p></li><li><p>提示语：浏览器不兼容时的文字显示</p></li><li><p>autoplay：自动播放</p></li><li><p>loop：循环播放</p></li><li><p>正确写法2(加入source标签)：</p></li></ul><pre><code>&lt;audio controls&gt;    &lt;source src=&quot;音频.mp3&quot; type=&quot;audio/mpeg&quot; autoplay loop/&gt;    &lt;source src=&quot;音频.ogg&quot; type=&quot;audio/ogg&quot; autoplay loop/&gt;    &lt;source src=&quot;音频.wav&quot; type=&quot;audio/wav&quot; autoplay loop/&gt;抱歉，您的浏览器不支持audio标签，请升级您的浏览器哦&lt;/audio&gt;</code></pre><ul><li>source标签为媒体元素定义媒体资源</li></ul><blockquote><p>它给浏览器提供多种格式的文件，浏览器会选择其支持的格式进行播放；如果都支持则任选一个，默认是第一个。</p></blockquote><table><thead><tr><th>Format</th><th>MIME-type</th><th>说明</th></tr></thead><tbody><tr><td>MP3</td><td>audio&#x2F;mpeg</td><td>一种音频压缩技术，用来大幅度的降低音频数</td></tr><tr><td>Ogg</td><td>audio&#x2F;ogg</td><td>新的音频压缩技术，完全免费，无专利限制</td></tr><tr><td>Wav</td><td>audio&#x2F;wav</td><td>由微软公司开发，声音质量接近CD</td></tr><tr><td><audio controls></td><td></td><td></td></tr></tbody></table><pre><code>&lt;source src=&quot;D:\arry\30天计划\配件\音标篇004.mp3&quot; type=&quot;audio/mpeg&quot; autoplay loop&gt;</code></pre><p>抱歉，您的浏览器不支持audio标签，请升级您的浏览器哦<br></audio></p><h4 id="视频标签video"><a href="#视频标签video" class="headerlink" title="视频标签video"></a>视频标签video</h4><ul><li>正确写法1：</li></ul><pre><code>&lt;video controls src=&quot;D:\arry\30天计划\配件\mi.mp4&quot; autoplay loop&gt;抱歉，您的浏览器不支持audio标签，请升级您的浏览器哦&lt;/video&gt;</code></pre><p><video controls src="D:\arry\30天计划\配件\mi.mp4" autoplay loop>抱歉，您的浏览器不支持audio标签，请升级您的浏览器哦</video></p><ul><li>正确写法2(加入source标签)：</li></ul><pre><code>&lt;video controls&gt;    &lt;source src=&quot;文件.mp4&quot; type=&quot;video.mp4&quot;/&gt;    &lt;source src=&quot;文件.webm&quot; type=&quot;video.webm&quot;/&gt;    &lt;source src=&quot;文件.ogv&quot; type=&quot;video.ogv&quot;/&gt;    &lt;source src=&quot;文件.avi&quot; type=&quot;video.avi&quot;/&gt;&lt;/video&gt;</code></pre><table><thead><tr><th>Format</th><th>MIME-type</th><th>说明</th></tr></thead><tbody><tr><td>mp4</td><td>video&#x2F;mp4</td><td>mp4即mpeg4,使用H264视频解编码器和AAC音频解编码器</td></tr><tr><td>webm</td><td>video&#x2F;webm</td><td>使用VP8视频解编码器和Vorbis音频解编码器</td></tr><tr><td>ogv</td><td>video&#x2F;ogv</td><td>支持256色和RLE压缩，它对视频文件采用了一种有损压缩方式</td></tr><tr><td>avi</td><td>video&#x2F;avi</td><td>使用Theora视频解编码器和Vorbis音频解编码器</td></tr></tbody></table><blockquote><p>视频和音频一样使用autoplay、loop标签<br>markdown语法：<a href="%E8%B7%AF%E5%BE%84/%E7%BD%91%E5%9D%80/%E9%93%BE%E6%8E%A5">title</a></p><blockquote><p>效果：<a href="https://www.baidu.com/">title</a></p></blockquote></blockquote><h3 id="6、表单元素-form"><a href="#6、表单元素-form" class="headerlink" title="6、表单元素 form"></a>6、表单元素 form</h3><ul><li>作用：收集不同类型的用户输入</li><li>属性<ul><li>action:提交表单时，向何处发送表单数据</li><li>method:规定发送表单数据的HTTP方法</li></ul></li><li>元素</li></ul><table><thead><tr><th>作用</th><th>标签</th><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>单行文本框</td><td>input</td><td>type&#x3D;”text”</td><td>单标签</td></tr><tr><td></td><td>input</td><td>value&#x3D;””</td><td>文本框的值</td></tr><tr><td></td><td>input</td><td>placeholder&#x3D;””</td><td>提示文本</td></tr><tr><td></td><td>input</td><td>disabled</td><td>表示禁用</td></tr><tr><td>多行文本框</td><td>textarea</td><td>cols</td><td>定义行数</td></tr><tr><td></td><td>textarea</td><td>rows</td><td>定义列数</td></tr><tr><td>密码框</td><td>input</td><td>type&#x3D;”password”</td><td>会隐藏内容</td></tr><tr><td>lable标签</td><td>lable</td><td></td><td>用lable标签包裹单选按钮和文字，则文字与按钮绑定</td></tr><tr><td>按钮</td><td>input</td><td>type&#x3D;”button”</td><td>普通按钮</td></tr><tr><td></td><td>input</td><td>type&#x3D;”submit”</td><td>提交按钮</td></tr><tr><td></td><td>input</td><td>type&#x3D;”reset”</td><td>重置按钮</td></tr><tr><td>单选按钮</td><td>input</td><td>type&#x3D;”radio”</td><td></td></tr><tr><td></td><td>input</td><td>name&#x3D;”自定义名称”</td><td>name名称相同时互斥</td></tr><tr><td></td><td>input</td><td>value&#x3D;””</td><td>向服务器提交的值</td></tr><tr><td></td><td>input</td><td>checked</td><td>默认选中</td></tr><tr><td>复选框(多选)</td><td>input</td><td>type&#x3D;”checkbox”</td><td></td></tr><tr><td></td><td>input</td><td>name&#x3D;””</td><td>同组复选框name值相同</td></tr><tr><td></td><td>input</td><td>value\checked</td><td>与单选按钮相同</td></tr><tr><td>下拉菜单</td><td>select</td><td></td><td>包裹option</td></tr><tr><td></td><td>select</td><td>option</td><td>内部选项</td></tr></tbody></table><ul><li>以下是html5新增控件，兼容到IE9，手机端完全兼容<table><thead><tr><th>作用</th><th>标签</th><th>属性</th></tr></thead><tbody><tr><td>颜色选择</td><td>input</td><td>color</td></tr><tr><td>日期时间选择</td><td>input</td><td>date\time\datetime</td></tr><tr><td>电子邮件</td><td>input</td><td>email</td></tr><tr><td>文件选择</td><td>input</td><td>file</td></tr><tr><td>数字输入</td><td>input</td><td>number，可设置min、max</td></tr><tr><td>拖拽条</td><td>input</td><td>range，可设置min、max</td></tr><tr><td>搜索框</td><td>input</td><td>search</td></tr><tr><td>网址输入</td><td>input</td><td>url</td></tr><tr><td>备选框</td><td>input</td><td>datalist</td></tr></tbody></table></li><li>效果：<form>  <p>用户名：<input type="text" placeholder="真实姓名"/>  </p>  <p>年龄：<input type="text" value="22" disabled>  </p>  <p>  常住地址:  <textarea cols="100" rows="2"></textarea>  </p>  <p>请输入密码：<input type="password"/>  </p>  <p>性别：  <lable><input type="radio" name="sex"/>男</lable>  <lable><input type="radio" name="sex"/>女</lable>  <lable><input type="radio" name="sex"/>保密</lable>  </p>  <p>  爱好：  <lable><input type="checkbox" name="爱好">篮球</lable>  <lable><input type="checkbox" name="爱好">书画</lable>  <lable><input type="checkbox" name="爱好">游戏</lable>  </p>  <p>  省份：  <select>  <option value="湖南省">湖南省</option>  <option value="湖北省">湖北省</option>  <option value="海南省">海南省</option>  </select>  市区：  <select>  <option value="长沙市">长沙市</option>  <option value="湘潭市">湘潭市</option>  <option value="深圳市">深圳市</option>  </select>  </p>  <p>  <input type="button" value="这是一个普通按钮"><br>  <input type="submit">这个会跳转<br>  <input type="reset">  </p>  <p>颜色选择：<input type="color"></p>  <p>日期：<input type="date"></p>  <p>编程语言有：  <input type="text" list="language">  <datalist id="language">      <option value="JAVA">JAVA</option>      <option value="python">python</option>      <option value="c++">c++</option>  </p></form></li></ul><h3 id="7、表格标签-bg-id"><a href="#7、表格标签-bg-id" class="headerlink" title="7、表格标签 {bg-id}"></a>7、表格标签 {bg-id}</h3><ul><li>标签属性：<ul><li>border：表格的边框<blockquote><p>HTML的大部分table标签属性已被CSS替代</p></blockquote></li></ul></li><li>表格头部<ul><li>table定义表格</li><li>thead页眉</li><li>caption表格标题</li><li>tr表格的行</li><li>th定义表头</li></ul></li></ul><pre><code>&lt;table border=&quot;1&quot;&gt;    &lt;thead&gt;    &lt;caption&gt;版本规划任务分配表&lt;/caption&gt;    &lt;tr&gt;        &lt;th&gt;需求：V0.3版本规划&lt;/th&gt;        &lt;th&gt;优先级&lt;/th&gt;        &lt;th&gt;任务分解&lt;/th&gt;        &lt;th&gt;产品负责人&lt;/th&gt;    &lt;/tr&gt;    &lt;/thead&gt;&lt;/table&gt;</code></pre><p>-主体</p><ul><li>tbody表格的主体</li><li>tr表格的行</li><li>td表格的单元</li></ul><pre><code>&lt;tbody&gt;    &lt;tr&gt;    &lt;td&gt;功能模块&lt;/td&gt;    &lt;td&gt;具体事项&lt;/td&gt;    &lt;td&gt;3&lt;/td&gt;    &lt;td&gt;任务2&lt;/td&gt;    &lt;td&gt;熊二&lt;/td&gt;    &lt;/tr&gt;&lt;/tbody&gt;</code></pre><ul><li>尾部</li></ul><pre><code>&lt;tfoot&gt;</code></pre><ul><li>跨行跨列(合并单元格)-td或th标签的属性</li><li>colspan：跨列</li><li>rowspan：跨行</li><li>实战<table border="1">   <thead>  <caption>版本规划任务分配表</caption> <tr>  <th colspan="2">需求：V0.3版本规划</th>  <th>优先级</th>  <th>任务分解</th>  <th>产品负责人</th> </tr>  </thead>  <tbody> <tr>  <td rowspan="3">功能模块1</td>  <td>具体事项1</td>  <td>3</td>  <td>任务1</td>  <td rowspan="3">@熊二</td> </tr> <tr>  <td rowspan="2">具体事项2</td>  <td>4</td>  <td>任务2</td> </tr> <tr>  <td>1</td>  <td>任务3</td> </tr> <tfoot> <tr>  <td colspan="5">备注</td> </tr> <tr>  <td colspan="5">……</td> </tr> </tfoot>  </tbody></table></li></ul><blockquote><p>markdown语法：</p><ul><li>表头：管道符(|)+三个以上减号-</li><li>表格：管道符(|)<br>管道符不需要对齐<br>对齐方式：在减号旁添加冒号；居左：—，居中：—：，居右—：<br>可以在表格中添加：’’的代码(不能是代码块)、强调、链接<br>我的疑问：markdown怎么跨单元格</li></ul></blockquote><h3 id="8、语义化标签"><a href="#8、语义化标签" class="headerlink" title="8、语义化标签"></a>8、语义化标签</h3><h4 id="yyhbq">语义化标签</h4><ul><li><p>文本格式化标签</p><table><thead><tr><th>标签</th><th>说明</th><th>markdown写法</th></tr></thead><tbody><tr><td>b</td><td>粗体(已被CSS替代)</td><td><strong>粗体</strong></td></tr><tr><td>i</td><td>斜体(已被CSS替代)</td><td><em>斜体</em></td></tr><tr><td>u</td><td>下划线(已被CSS替代)</td><td><del>删除线</del></td></tr><tr><td>em</td><td>着重强调</td><td></td></tr><tr><td>strong</td><td>特别重要的文字</td><td></td></tr><tr><td>mark</td><td>高亮文本</td><td>&#x3D;&#x3D;高亮&#x3D;&#x3D;</td></tr><tr><td>sub</td><td>下标</td><td>H<del>2</del>O</td></tr><tr><td>sup</td><td>上标</td><td>X^2^</td></tr><tr><td>del</td><td>删除线</td><td></td></tr><tr><td>pre</td><td>预格式文本</td><td></td></tr><tr><td>figure</td><td>用以规定独立的流内容</td><td></td></tr><tr><td>figcaption</td><td>figure的标题</td><td></td></tr></tbody></table></li><li><p><code>pre</code>被包围在<code>&lt;pre&gt;</code>标签，元素中的文本通常会保留空格和换行符。<br>而文本也会呈现为等宽字体。</p></li></ul><pre><code>&lt;pre&gt;被包围在 pre 标签  元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。 &lt;/pre&gt;&lt;figure&gt;    &lt;figcaption&gt;小米家电&lt;/figcaption&gt;    &lt;img src=&quot;家电.webp&quot; &quot;width=20&quot;&gt;&lt;/figure&gt;&lt;figure&gt;    &lt;img src=&quot;&quot;&gt;    &lt;figcaption&gt;小米家电&lt;/figcaption&gt;&lt;/figure&gt;</code></pre><ul><li>HTML5区块标签<table><thead><tr><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>span</td><td>文本中的区块标签</td></tr><tr><td>header</td><td>页头</td></tr><tr><td>nav</td><td>导航条</td></tr><tr><td>main</td><td>网页核心部分</td></tr><tr><td>article</td><td>文档的核心内容</td></tr><tr><td>section</td><td>文档的区域</td></tr><tr><td>aside</td><td>非必要内容：广告等</td></tr><tr><td>footer</td><td>页脚</td></tr></tbody></table></li></ul><pre><code>&lt;p&gt;商品价格：&lt;span&gt;苹果&lt;/span&gt;5元&lt;/p&gt;</code></pre><ul><li>网页的排版：</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>网站logo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>网页的导航<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span><span class="token punctuation">></span></span>广告栏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>商品标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>商品信息1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>页脚<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span></code></pre><h3 id="markdown语法"><a href="#markdown语法" class="headerlink" title="markdown语法"></a>markdown语法</h3><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><table><thead><tr><th>写法</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>‘’</td><td>原代码显示</td><td>单个代码、短语用</td></tr><tr><td>&#96;&#96;&#96;html</td><td>代码块</td><td>前后各三个，标注语言后会自动添加颜色</td></tr><tr><td>[数字&#x2F;单词]</td><td>脚注</td><td>添加注释和引用</td></tr><tr><td>-空格[空格]空格文字</td><td>待办事项</td><td>方框中加x是已完成，空格是未完成</td></tr><tr><td>表情符</td><td>表情</td><td>可以直接复制表情或者使用其简码</td></tr></tbody></table><blockquote><p>脚注的标识符可以标注数字或者英文单词<br>标注可以写在在除其他元素中的任何地方<br>英语[^1]  语文[^2]<br>[^1]:my footnote.<br>[^2]:hihihi</p></blockquote><pre><code>英语[^1]  [^1]:my footnote.</code></pre><blockquote><p>任务列表</p></blockquote><ul><li><input disabled="" type="checkbox"> 阅读</li><li><input checked="" disabled="" type="checkbox"> 运动</li></ul><pre><code>- [ ] 阅读- [x] 运动</code></pre><blockquote><p>表情</p><blockquote><p>😀</p></blockquote></blockquote><h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h4><ul><li><p>自动url链接<br>   百度：<a href="http://www.baidu.com/">http://www.baidu.com</a></p></li><li><p>禁用url链接<br>  加上符号：<code>http://www.baidu.com</code></p></li><li><p>徽章</p><ul><li>格式：<a href="%E8%B6%85%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80"><img src="/%E5%9B%BE%E7%89%87%E6%BA%90%E5%9C%B0%E5%9D%80" alt="图片文字说明"></a></li><li>先获取在线徽章的地址，然后按照语言规则手动拼接</li><li><a href="https://github.com/snowdreams1006"><img src="https://img.shields.io/badge/github-snowdreams1006-brightgreen.svg" alt="github"></a></li></ul></li></ul><blockquote><p>徽章图形制作网站：<a href="https://shields.io/">https://shields.io/</a><br>相关知识点：<a href="https://segmentfault.com/search?q=%E5%BE%BD%E7%AB%A0">https://segmentfault.com/search?q=%E5%BE%BD%E7%AB%A0</a> </p></blockquote><h2 id="三、VScode基础配置"><a href="#三、VScode基础配置" class="headerlink" title="三、VScode基础配置"></a>三、VScode基础配置</h2><h3 id="1、下载：官网下载"><a href="#1、下载：官网下载" class="headerlink" title="1、下载：官网下载"></a>1、下载：官网下载</h3><h3 id="2、插件安装："><a href="#2、插件安装：" class="headerlink" title="2、插件安装："></a>2、插件安装：</h3><ul><li>简体中文语言包： chinese</li><li>图标：Material Icon Theme</li><li>通过编辑器打开默认浏览器：open in brower</li><li>开启本地服务，即时刷新：live server</li><li>自动修改标签对： auto rename tag</li><li>将代码生成一张图片：carbon-now-sh</li><li>格式化代码：prettier-code-formatter;打开设置中的save勾选保存时格式化文件</li></ul><h3 id="3、常用快捷键"><a href="#3、常用快捷键" class="headerlink" title="3、常用快捷键"></a>3、常用快捷键</h3><ul><li>单行注释：ctrl+&#x2F;</li><li>多行注释2：alt+shift+A</li><li>移动行：alt+up&#x2F;down</li><li>显示、隐藏目录栏：ctrl+b</li><li>控制台终端显示&#x2F;隐藏：ctrl+~</li><li>多行编辑：ctrl+alt+up&#x2F;down</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客介绍及搭建过程分享</title>
      <link href="/2023/11/16/%E5%8D%9A%E5%AE%A2%E4%BB%8B%E7%BB%8D%E5%8F%8A%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E5%88%86%E4%BA%AB/"/>
      <url>/2023/11/16/%E5%8D%9A%E5%AE%A2%E4%BB%8B%E7%BB%8D%E5%8F%8A%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h3 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h3><blockquote><p>写这篇文的目的</p></blockquote><ul><li>记录自己搭建过程，便于以后快速复用</li><li>总结经验和自己踩的坑，给其他小伙伴一些参考(由于是搭建后写的，所以没有参考图片)</li></ul><blockquote><p>介绍</p></blockquote><ul><li>初步效果参考我的博客：<a href="https://hermiablog.com/">hermia的个人博客</a></li><li>本博客基于Hexo框架，使用github托管</li><li>使用自定义域名：<code>hermiablog.com</code></li><li>hexo主题：<code>hexo-theme-matery</code></li></ul><blockquote><p>主题特性</p></blockquote><ul><li>简单漂亮，文章内容美观易读</li><li>Material Design 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 Banner 图片(我选的图片都很美，期待你的每天访问哦)</li><li>瀑布流式的博客文章列表（文章无特色图片时会有漂亮的图片代替）</li><li>时间轴式的归档页</li><li>词云的标签页和雷达图的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 MathJax</li><li>TOC 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li>Gitalk、Gitment、Valine 和 Disqus 评论模块（推荐使用 Gitalk）</li><li>集成了不蒜子统计、谷歌分析（Google Analytics）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能<ul><li>博客正在建设中，更多功能敬请期待….</li></ul></li></ul><blockquote><p>跟着本篇文章，你会实现：</p></blockquote><ul><li>使用<code>github用户名.github.io</code>&#x2F;自定义域名访问博客</li><li>设置自己喜欢的主题</li></ul><blockquote><p>软件准备</p></blockquote><ul><li>git</li><li>Node.js</li><li>任一编辑器</li><li>注意：命令行操作使用git，文件内容编辑使用vscode</li></ul><blockquote><p>参考官方文档</p></blockquote><ul><li><a href="https://docs.github.com/zh/pages">Github Pages文档</a></li><li><a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a></li></ul><h3 id="低配版：github域名-默认hexo主题"><a href="#低配版：github域名-默认hexo主题" class="headerlink" title="低配版：github域名+默认hexo主题"></a>低配版：github域名+默认hexo主题</h3><blockquote><p>步骤</p></blockquote><ul><li>新建本地仓库</li><li>安装hexo</li><li>创建github仓库</li><li>链接远程仓库</li><li>部署</li></ul><h4 id="新建本地仓库"><a href="#新建本地仓库" class="headerlink" title="新建本地仓库"></a>新建本地仓库</h4><blockquote><p>我的电脑里同时使用了gitee和github仓库，且使用了不同的用户名及邮箱，因此</p><ul><li>不能使用全局的用户名、邮箱配置</li><li>所以在使用SSH链接远程仓库时要单独配置</li></ul></blockquote><ul><li>首先在本地新建空文件夹myblog</li><li>注意：<strong>不要</strong>使用<code>git init</code>来初始化仓库</li><li>因为hexo安装必须在空文件夹</li></ul><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><ul><li>右击刚刚新建的文件夹myblog，点击Git Bash Here打开git窗口</li><li>输入<code>npm install -g hexo-cli</code>安装Hexo</li><li>验证是否安装成功<code>hexo -v</code></li><li>初始化Hexo：<code>hexo init</code></li><li>查看是否能在本地启动成功：<code>hexo s</code>；启动服务器，访问网址之后可以看到hexo的初始界面；停止服务器：<code>ctrl+c</code></li></ul><pre><code>npm install -g hexo-clihexo -vhexo inithexo s</code></pre><blockquote><p>Hexo相关目录文件</p></blockquote><ul><li>node_modules是node.js各种库的目录</li><li>public是生成的网页文件目录</li><li>scaffolds里面就三个文件，存储着新文章和新页面的初始设置</li><li>source是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件</li><li>themes存放着主题文件，一般也用不到。<ul><li>我们平时写文章只需要关注source&#x2F;_posts这个文件夹就行了</li></ul></li></ul><h4 id="创建github仓库"><a href="#创建github仓库" class="headerlink" title="创建github仓库"></a>创建github仓库</h4><blockquote><p>注意：仓库名必须是<code>用户名.github.io</code>，这有这样做，部署完之后才能使用<code>http://用户名.github.io</code>访问</p></blockquote><ul><li>打开<code>https://github.com/</code>，新建一个项目仓库</li><li>选择公开仓库和需要README文件</li><li>git仓库默认主分支名为main，建议修改为master，和本地仓库的主分支名相同</li></ul><h4 id="使用SSH密钥链接远程仓库"><a href="#使用SSH密钥链接远程仓库" class="headerlink" title="使用SSH密钥链接远程仓库"></a>使用SSH密钥链接远程仓库</h4><ul><li>回到本地仓库的git界面</li><li>绑定用户名和邮箱</li></ul><pre><code># 全局git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;# 局部git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;# 查看用用户名和邮箱信息是否配置成功git config  --list</code></pre><blockquote><ul><li>如果你和我一样有多个仓库，就去掉 –global</li><li>邮箱就是你github绑定的邮箱</li><li>检查是否配置成功</li></ul></blockquote><ul><li>创建SSH</li></ul><pre><code>ssh-keygen -t rsa -C 邮箱名</code></pre><blockquote><ul><li>后面是自己注册github的邮箱，然后敲三次回车</li></ul></blockquote><ul><li>接着就会发现<code>C:\Users\用户名</code>下多了一个.ssh目录，打开后有一个公钥，一个私钥。id_rsa.pub是公钥</li><li>我们需要打开它，复制里面的内容</li><li>打开github，在头像下面点击settings，再点击SSH and GPG keys，新建一个SSH，标题随意取，把刚刚复制id_rsa.pub里面的信息粘贴到钥匙框</li><li>在git bash输入<code>ssh -T git@github.com</code>；如果出现<code>...successfully...</code>就成功了</li></ul><h4 id="将hexo和GitHub关联"><a href="#将hexo和GitHub关联" class="headerlink" title="将hexo和GitHub关联"></a>将hexo和GitHub关联</h4><ul><li>打开本地仓库，博客文件夹，在根目录找到<code>_config.yml</code>文件，使用vscode或任一编辑器打开</li><li>修改配置：</li></ul><pre><code>deploy:  type: git  repository: github地址  branch: master</code></pre><blockquote><ul><li>获取repository：打开github仓库–&gt;Code–&gt;复制SSH地址填入即可</li><li>注意：hexo的所有文件，在修改时切记<strong>冒号后面有空格</strong>，否则报错</li></ul></blockquote><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><ul><li>安装deploy-git</li></ul><pre><code>npm install hexo-deployer-git --save</code></pre><ul><li>依次执行以下命令</li></ul><pre><code># 清除缓存文件 (db.json) 和已生成的静态文件 (public)hexo c# 生成静态文件hexo g# 部署网站hexo d</code></pre><blockquote><ul><li>注意：虽然我们使用的是git，但是<code>hexo d</code>会自动把文件传到github上；不需要再使用<code>git push</code>了</li></ul></blockquote><ul><li>完成以上步骤，你就可以使用xxx.github.io来访问你的博客啦</li><li>以后写文章，只需要以下命令</li></ul><pre><code>hexo new post &quot;文章标题&quot;hexo chexo ghexo d</code></pre><h4 id="如果你使用的是多仓库"><a href="#如果你使用的是多仓库" class="headerlink" title="如果你使用的是多仓库"></a>如果你使用的是多仓库</h4><ul><li>如果你出现<code>Please tell me who you are</code>报错</li><li>如果你和我一样使用多仓库，那么：<blockquote><ul><li>首先不要设置全局git用户名&#x2F;邮箱</li></ul></blockquote></li></ul><pre><code># 删除全局设置git config --global --unset user.namegit config --global --unset user.email</code></pre><blockquote><ul><li>打开博客文件夹，点击<code>.deploy_git</code>文件夹–&gt;点击窗口上的查看–&gt;显示隐藏目录</li><li>此时就会出现git的隐藏目录<code>.git</code></li><li>进去之后，打开<code>config</code>配置文件，添加以下内容，注意空格</li></ul></blockquote><pre><code>[user]email = your email name = your name</code></pre><h3 id="高配版：自定义域名-HTTPS加密协议-自定义主题"><a href="#高配版：自定义域名-HTTPS加密协议-自定义主题" class="headerlink" title="高配版：自定义域名+HTTPS加密协议+自定义主题"></a>高配版：自定义域名+HTTPS加密协议+自定义主题</h3><h4 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h4><ul><li>首先，自定义域名需要花钱买，华为云&#x2F;腾讯云&#x2F;阿里云都可以</li><li>购买之后需要解析域名</li><li>打开github仓库–&gt;点击setting–&gt;找到pages–&gt;拉到Custom domain处，填写你购买的域名</li><li>此时项目根目录会自动生成CNAME文件</li></ul><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><h4 id="git——多仓库配置"><a href="#git——多仓库配置" class="headerlink" title="git——多仓库配置"></a>git——多仓库配置</h4><blockquote><p>!!!首先 多仓库配置 绝对不要把用户名及邮箱设置为全局</p></blockquote><ul><li>git安装后，点击文件夹–&gt;右击 git bash here打开</li><li>初始化本地仓库</li></ul><pre><code>git init</code></pre><ul><li>设置用户名和有效</li></ul><pre><code>git config  user.name &quot;你的名字（一定要是英文的）&quot;git config  user.email &quot;你的邮箱&quot;# 查看用用户名和邮箱信息是否配置成功git config --global --list# 删除全局设置git config --global --unset user.namegit config --global --unset user.email</code></pre><blockquote><p>添加SSH公钥</p></blockquote><ul><li>创建SSH密钥对</li></ul><pre><code>ssh-keygen -t rsa -C 邮箱名</code></pre><ul><li>如果不需要设置密码，可以直接按Enter键</li><li>之后就会在用户主目录下的<code>.ssh</code>文件夹中生成以下两个文件：</li></ul><pre><code>id_rsaid_rsa.pub</code></pre><ul><li>其中id_rsa为私钥，id_rsa.pub为公钥</li><li>因为有两个仓库，所有有两份，因此需要在<code>.ssh</code>文件夹中分开命名<ul><li>gitee仓库的密钥：id_rsa_gitee和id._rsa_gitee.pub</li><li>github仓库的密钥：id_rsa_github和id._rsa_github.pub</li></ul></li><li>将自定义路径的私钥添加到ssh秘钥搜索列表中</li></ul><pre><code>//连接认证agent（身份验证代理）ssh-agent bash//修改私钥路径ssh-add ~/.ssh/id_rsa_github</code></pre><ul><li>将公钥内容粘贴到自己github&#x2F;Gitee的设置中<ul><li>用记事本打开id._rsa.pub文件，复制内容</li><li>登录自己的github或gitee，在个人设置中找到“安全设置”–“ssh公钥”，标题自定，将公钥粘贴进去</li></ul></li><li>测试本机能否与github&#x2F;gitee使用ssh通信</li></ul><pre><code>ssh -T git@gitee.com//或ssh -T git@github.com</code></pre><ul><li><p>ssh返回 “……successfully ……”，这表示可以与远程愉快的通信了 </p></li><li><p>本地仓库与GitHub远程仓库进行关联</p></li></ul><pre><code>git remote add origin 远程仓库地址(HTTP/SSH)</code></pre><h4 id="git基本操作"><a href="#git基本操作" class="headerlink" title="git基本操作"></a>git基本操作</h4><ul><li>在本地新建README文件</li></ul><pre><code>touch README.md</code></pre><ul><li><p>git add README.md命令，将刚刚新建的文件添加到暂存区中</p></li><li><p>git status命令来检测当前git仓库的状态</p></li><li><p>git commit -m “XXX”命令，将暂存区中的更改保存到版本库中，并对本次的更改添加注释</p></li><li><p>git status命令来检测当前git仓库的状态</p></li><li><p>git log，查看你的版本库</p></li><li><p>创建新分支：git branch 分支名</p></li><li><p>查看所有分支：git branch</p></li><li><p>切换分支：git checkout 分支名</p></li><li><p>push到远程仓库上面：git push origin 分支名</p></li><li><p>git branch -r 查看远程分支</p></li><li><p>git branch -a 查看本地仓库和远程分支（a是all的简写）</p></li></ul><blockquote><p>在分支上新建文件</p></blockquote><ul><li>切换到需要提交的分支上面 git checkout hexo</li><li>在hexo分支上新建文件 touch blogDesc.md</li><li>修改文档 vim blogDesc.md</li><li>编辑 i </li><li>保存 esc :wq</li><li>提交到分支上面<ul><li>git add 文件名&#x2F;.()</li><li>git commit -m “描述”</li><li>git push -u origin hexo</li></ul></li><li>切换到主分支上面<ul><li>git checkout master</li></ul></li><li>将本地分支和合并到本地主分支上<ul><li>git merge hexo</li></ul></li><li>远程到仓库<ul><li>git pull origin main</li></ul></li></ul><blockquote><p>删除分支</p></blockquote><ul><li>查看所有的分支<ul><li>git branch -a</li></ul></li><li>删除远程分支<ul><li>git push origin –delete hello</li></ul></li><li>删除本地分支<ul><li>git branch -D hello</li></ul></li></ul><blockquote><p>远程分支操作</p></blockquote><ul><li>从远程仓库中,把对应的远程分支下载到本地仓库中,保持本地分支和远程分支名称相同</li></ul><pre><code>#从远程仓库中,把对应的远程分支下载到本地仓库中,并把下载的本地分支进行重命名git checkout -b 本地分支的名称 远程仓库名称/远程分支名称</code></pre><ul><li>将本地分支推送到远程仓库</li></ul><pre><code># -u 表示把本地分支和远程分支进行关联,只在第一次推送的时候需要带-u参数git push -u 远程仓库的名称 本地分支的名称:远程分支的名称</code></pre><ul><li>拉取远程分支的最新代码</li></ul><pre><code>#从远程仓库,拉取当前分支最新的代码,保持当前分支的代码和远程分支代码一致git pull</code></pre><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><ul><li>新建文章 hexo new post 标题</li><li>部署</li></ul><pre><code>#清理之前的生成hexo c# 生成静态网站hexo g#开启本地服务 ctrl+c 停止hexo s#上传到githubhexo d</code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
